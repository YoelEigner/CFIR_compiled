{"version":3,"sources":["HomePage/NumbersOnly.js","DALs/GetPhysicians.js","Login/GetPhysicianFunc.js","BL/ResetAjustmentFees.js","ResetAdjustmentFeeModal/ResetAdjustmentFeeModal.js","BL/RefreshToken.js","Login/TokenRefreshModal.js","NavBar.js","Login/Denied.js","BL/RegisterUserBL.js","RegisterUsers/RegisterUser.js","BL/JWTtoken.js","BL/GetProvinces.js","BL/GetPaymentTypes.js","Loader/Loader.js","BL/GetAssociateLeval.js","Login/Login.js","BL/GetWorkerProfile.js","BL/GetVideoTech.js","BL/GetServiceTypes.js","Workers/WorkerOptionModal.js","BL/UpdateWorkerProfiles.js","BL/NewWorkerProfile.js","BL/DeleteWorkerProfile.js","ResetAdjustmentFeeModal/DeleteProfileModual.js","BL/GetNewWorkers.js","Workers/TablesColumns.js","Workers/WorkerProfiles.js","DALs/GetFileByDate.js","BL/GetAssociateTypes.js","ResetAdjustmentFeeModal/EmailConfirmationModal.js","HomePage/Table.js","HomePage/Main.js","BL/ChangePasswordBL.js","ChangePassword/ChangePassword.js","BL/UpdateEmailPasswordBL.js","UpdateEmailPassword/UpdateEmailPassword.js","Router/Routing.js","App.js","reportWebVitals.js","store/Reducer.js","store/ReduxStore.js","index.js"],"names":["exports","NumbersOnly","event","test","key","preventDefault","GetPhysician","async","axios","get","process","headers","concat","token","GetPhysicianFunc","resp","arr","data","forEach","user","temp","status","associateName","associateType","moment","startDate","format","push","resetadjustmentfee","ResetAdjustmentFeeModal","_ref","show","setShow","handleResp","handleClose","React","createElement","Fragment","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","resetAdjustmentFees","RefreshToken","post","RefreshToeknModal","open","setOpen","revokeAccess","dispatch","useDispatch","navigate","useNavigate","storeData","useSelector","state","type","backdrop","keyboard","className","Timer","initialTime","checkpoints","time","callback","direction","Seconds","refreshToken","payload","accessToken","NavBar","msg","setMsg","useState","varient","setVarient","showHide","setShowHide","active","setActive","location","useLocation","useEffect","physicians","onReload","TokenRefreshModal","close","setTimeout","expiresIn","Navbar","bg","style","position","top","zIndex","Container","Nav","activeKey","onSelect","selectedKey","Link","href","window","pathname","Text","username","charAt","toUpperCase","slice","Alert","textAlign","e","Denied","RegisterUserBL","oldPassword","password","RegisterUser","setUsername","oldPass","setOldPass","newPass","setNewPass","err","setErr","left","transform","Col","Form","onSubmit","error","response","submit","Group","controlId","Label","Control","placeholder","onChange","target","value","GetToken","GetProvinces","GetPaymentTypes","LoadingSpinner","GetAssociateLeval","Login","pass","setPass","isLoading","setIsLoading","respProvinces","paymentTypes","associateLeval","authenticated","GetWorkerProfile","id","invalidateCache","GetVideoTech","GetServiceTypes","WorkerOptionModal","header","setCovrage1","setCovrage2","covrage1","covrage2","superviser2","options","setOptions","selectedOptions","setSelectedOptions","getServiceTypes","tryParse","JSON","parse","checkBox","x","label","find","item","disableCheckBox","undefined","i","map","Check","disabled","name","defaultChecked","handleChange","option","isChecked","index","findIndex","splice","checked","UpdateWorkerProfile","obj","NewWorkerProfile","DeleteWorkerProfile","DeleteProfileModual","worker","endDate","deleteProfile","GetNewWorkers","WorkerProfileTable","selected","setSelected","tglSuperviser","setTglSuperviser","tglIsSupervised","setTglIsSupervised","directorSupervised","setDirectorsupervised","supOnegetMoney","setSupOneGetsMoney","supTwoGetMoney","setSupTwoGetsMoney","hst","setHst","copyProfile","setCopyProfile","setAssociateName","associateEmail","setAssociateEmail","associate","setAssociate","superviserOne","setSupervierOne","superviserTwo","setSupervierTwo","videoFee","setVideoFee","provValue","setProvValue","videoTech","setVideoTech","superviserOneCovrage","setSuperviserOneCovrage","superviserTwoCovrage","setSuperviserTwoCovrage","selectedVideoTech","setSelectedVideoTech","inOfficeBlocks","setInOfficeBlocks","inOfficeBlockHours","setInOfficeBlockHours","inOfficeBlockTimes","setInOfficeBlockTimes","blocksHourlyRate","setBlocksHourlyRate","blocksBiWeeklyCharge","setBlocksBiWeeklyCharge","assessmentRate","setAssessmentRate","assessmentRate_c","setAssessmentRate_c","assessmentRate_f","setAssessmentRate_f","associateFeeBaseRate","setAssociateFeeBaseRate","associateFeeBaseRate_c","setAssociateFeeBaseRate_c","associateFeeBaseRate_f","setAssociateFeeBaseRate_f","associateFeeBaseRateTwo","setAssociateFeeBaseRateTwo","associateFeeBaseRateTwo_c","setAssociateFeeBaseRateTwo_c","associateFeeBaseRateTwo_f","setAssociateFeeBaseRateTwo_f","associateFeebaseRateOverRide33","setAssociateFeeBaseRate33","associateFeebaseRateOverRide33_c","setAssociateFeeBaseRate33_c","associateFeebaseRateOverRide33_f","setAssociateFeeBaseRate33_f","associateFeebaseRateOverRide33Two","setAssociateFeeBaseRate33Two","associateFeebaseRateOverRide33Two_c","setAssociateFeeBaseRate33Two_c","associateFeebaseRateOverRide33Two_f","setAssociateFeeBaseRate33Two_f","associateFeebaseRateOverRide34","setAssociateFeeBaseRate34","associateFeebaseRateOverRide34_c","setAssociateFeeBaseRate34_c","associateFeebaseRateOverRide34_f","setAssociateFeeBaseRate34_f","associateFeebaseRateOverRide34Two","setAssociateFeeBaseRate34Two","associateFeebaseRateOverRide34Two_c","setAssociateFeeBaseRate34Two_c","associateFeebaseRateOverRide34Two_f","setAssociateFeeBaseRate34Two_f","associateFeeBaseRateOverrideAsseements","setAssociateFeeBaseRateOverrideAsseements","associateFeeBaseRateOverrideAsseements_c","setAssociateFeeBaseRateOverrideAsseements_c","associateFeeBaseRateOverrideAsseements_f","setAssociateFeeBaseRateOverrideAsseements_f","associateFeeBaseType","setAssociateFeeBaseType","associateFeeBaseTypeTwo","setAssociateFeeBaseTypeTwo","superviserSelect","setSuperviserSelect","newWorkers","setNewWorkers","showModal","setShowModal","modalHeader","setModalHeader","nonChargeablesTable","setNonChargeablesTable","duplicateTable","setDuplicateTable","associateFeesTable","setAssociateFeesTable","totalRemittenceTable","setTotalRemittenceTable","nonRemittablesTable","setNonRemittablesTable","transactionsTable","setTransactionsTable","superviseeTotalTabel","setSuperviseeTotalTable","appliedPaymentsTotalTable","setAppliedPaymentsTotalTable","comments","setComments","adjustmentFee","setAdjustmentFee","adjustmentPaymentFee","setAdjustmentPAymentFee","subPrac","setSubPrac","assessmentMoneyToSupervisorOne","setAssessmentMoneyToSupervisorOne","assessmentMoneyToSupervisorTwo","setAssessmentMoneyToSupervisorTwo","probono","setProbono","date","setDate","Date","setEndDate","superviserSelectOptions","Physician","videoTechAPI","getNewWorker","includes","console","log","length","site","isSuperviser","isSupervised","IsSupervisedByNonDirector","supervisor1","supervisor2","supervisor1Covrage","supervisor2Covrage","supervisorOneGetsMoney","supervisorTwoGetsMoney","associateFeeBaseType2","associateFeeBaseRateOverrideLessThen","associateFeeBaseRateOverrideLessThen_c","associateFeeBaseRateOverrideLessThen_f","associateFeeBaseRateOverrideLessThenTwo","associateFeeBaseRateOverrideLessThenTwo_c","associateFeeBaseRateOverrideLessThenTwo_f","associateFeeBaseRateOverrideGreaterThen","associateFeeBaseRateOverrideGreaterThen_c","associateFeeBaseRateOverrideGreaterThen_f","associateFeeBaseRateOverrideGreaterThenTwo","associateFeeBaseRateOverrideGreaterThenTwo_c","associateFeeBaseRateOverrideGreaterThenTwo_f","cahrgeVideoFee","removeStatus","split","trim","handleAddClick","handleAddPaymentClick","updateAdjustmentArr","tempArr","updatePaymentAdjustmentArr","hours","isNaN","margin","reload","message","ToggleButton","marginBottom","size","chargesHST","stringify","Object","keys","tempUser","new_id","errMsg","handleSave","Table","Card","aria-required","currentTarget","DatePicker","width","Select","classNamePrefix","isSearchable","provs","provence","InputGroup","required","aria-label","aria-describedby","levals","leval","setAssociateLeval","clearSuperviser","marginRight","onKeyPress","backgroundColor","as","marginLeft","handleRemoveClick","handleRemovePaymentClick","WorkerProfiles","setPhysicians","physicianNmae","setPhysicianName","setWorker","styles","physiciansOptions","String","GetFile","start","end","reportType","users","action","actionType","responseType","file","Blob","a","document","url","URL","createObjectURL","download","toJSON","toLocaleTimeString","click","revokeObjectURL","filename","saveAs","GetAssociateTypes","EmailConfirmationModal","sendEmails","centered","replace","MainTable","loading","InvalidateCache","setProvence","chbx","setChbx","setErrMsg","setReportType","handleEmailClick","filter","runReport","getFiles","isDisabled","activeWorkers","workersTemp","activeChbxValue","filterSites","tbodyTemplate","prov","indexKey","updateChbxValue","row","ButtonGroup","province","Main","selectedUser","setSelectedUser","addEndDate","setAddEndDate","numberFormat","Intl","NumberFormat","cookies","Cookies","setInvalidateCache","onStartDateChange","useCallback","set","maxAge","endateTemp","getDate","cookieStartDate","isValid","date1","date2","getTime","onEndDateChange","paddingTop","Row","display","justifyContent","percentage","ammount","contentEditable","handleVideoFeeChange","borderWidth","borderStyle","paddingLeft","paddingRight","paddingBottem","_error$response","getWorker","ChangePasswordBL","nerwPassword","oldpassword","newpassword","ChangePassword","UpdateEmailPasswordBL","UpdateEmailPassword","right","Routing","loggedIn","setLoggedin","Router","Routes","Route","exact","path","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appReducer","arguments","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","persistor","createStore","persistStore","configureStore","ReactDOM","createRoot","getElementById","render","Provider","PersistGate"],"mappings":"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","file":"static/js/main.06e15f2c.chunk.js","sourcesContent":["exports.NumbersOnly = (event) => {\r\n    !/[0-9.-]/.test(event.key) && event.preventDefault();\r\n} ","import axios from \"axios\"\r\n\r\n\r\nconst GetPhysician = async (token) => {\r\n    let resp = await axios.get(process.env.REACT_APP_API_URL + '/physicians', {\r\n        headers: {\r\n            \"authorization\": `Bearer ${token}`\r\n        }\r\n    })\r\n    return resp\r\n\r\n}\r\n\r\nexport default GetPhysician","import moment from 'moment';\r\nimport GetPhysician from './../DALs/GetPhysicians';\r\n\r\nconst GetPhysicianFunc = async (token) => {\r\n    let resp = await GetPhysician(token)\r\n    let arr = []\r\n    resp.data.forEach(user => {\r\n        let temp = user\r\n        let status = temp.status === true ? \" (Active)\" : \" (Not Active)\"\r\n        temp.associateName = `${user.associateType} : ${temp.associateName} ${status} | ${moment(user.startDate).format('YYYY-MM-DD')}`\r\n        arr.push(temp)\r\n    })\r\n    return resp.data\r\n}\r\n\r\nexport default GetPhysicianFunc","import axios from 'axios';\r\n\r\nconst resetadjustmentfee = async (token) => {\r\n    let resp = await axios.get(process.env.REACT_APP_API_URL + `/resetadjustmentfee`, { headers: { \"authorization\": `Bearer ${token}` } })\r\n    return resp.data\r\n}\r\n\r\nexport default resetadjustmentfee","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport resetadjustmentfee from './../BL/ResetAjustmentFees';\r\n\r\nconst ResetAdjustmentFeeModal = ({ show, setShow, token, handleResp }) => {\r\n    const handleClose = () => setShow(false);\r\n    const resetAdjustmentFees = async () => {\r\n        let resp = await resetadjustmentfee(token)\r\n        handleResp(resp)\r\n    }\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Reset Adjustment Fees</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure you want to reset <b>ALL</b> adjustment fees?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => resetAdjustmentFees()}>\r\n                        Reset\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\nexport default ResetAdjustmentFeeModal;","import axios from 'axios';\r\n\r\nconst RefreshToken = async (token) => {\r\n    let resp = await axios.post(process.env.REACT_APP_API_AUTH_URL + `/token`, { token })\r\n    return resp.data\r\n}\r\n\r\nexport default RefreshToken\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Timer from 'react-compound-timer/build';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RefreshToken from '../BL/RefreshToken';\r\n\r\n\r\nconst RefreshToeknModal = ({ open, setOpen, revokeAccess }) => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n    const storeData = (useSelector(state => state))\r\n\r\n    const handleClose = () => {\r\n        dispatch({ type: \"RESET\" })\r\n        navigate('/login')\r\n        setOpen(false)\r\n    }\r\n    const handleStay = async () => {\r\n        let resp = await RefreshToken(storeData.refreshToken)\r\n        dispatch({ type: \"ACCESSTOKEN\", payload: resp.accessToken });\r\n        dispatch({ type: \"AUTHENTICATED\", payload: true })\r\n        revokeAccess()\r\n        setOpen(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                show={open}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                className='myModal'\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Logout</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    You will be logged out in {\"\"}\r\n                    <Timer initialTime={59000} checkpoints={[\r\n                        {\r\n                            time: 0,\r\n                            callback: () => handleClose(),\r\n                        }\r\n                    ]}\r\n                        direction=\"backward\">\r\n                        <Timer.Seconds />\r\n                    </Timer> seconds, need more time?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Logout\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleStay}>Stay logged in</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\nexport default RefreshToeknModal\r\n","import React from 'react';\r\nimport { Alert, Container, Nav, Navbar } from \"react-bootstrap\"\r\nimport { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from 'react';\r\nimport GetPhysicianFunc from './Login/GetPhysicianFunc';\r\nimport ResetAdjustmentFeeModal from './ResetAdjustmentFeeModal/ResetAdjustmentFeeModal';\r\nimport TokenRefreshModal from \"./Login/TokenRefreshModal\";\r\n\r\n\r\nconst NavBar = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch()\r\n    const storeData = useSelector(state => state)\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [varient, setVarient] = useState(\"success\")\r\n    const [showHide, setShowHide] = useState(false)\r\n    const [open, setOpen] = useState(false)\r\n    const [active, setActive] = useState('default');\r\n    const location = useLocation();\r\n\r\n    const logout = () => {\r\n        dispatch({ type: \"RESET\" })\r\n        navigate('/login')\r\n    }\r\n    const onReload = async () => {\r\n        let physicians = await GetPhysicianFunc(storeData.accessToken)\r\n        dispatch({ type: \"PHYSICIANS\", payload: physicians })\r\n\r\n    }\r\n    useEffect(() => {\r\n        onReload()\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     revokeAccess()\r\n    // }, [])\r\n\r\n    const revokeAccess = () => {\r\n        setTimeout(() => {\r\n            setOpen(true)\r\n        }, storeData.expiresIn);\r\n    }\r\n\r\n    const handleResp = async (resp) => {\r\n        setShowHide(false)\r\n        if (resp === 'OK') {\r\n            setVarient(\"success\")\r\n            setMsg(\"Adjustment fees have been reset\")\r\n\r\n            setTimeout(() => {\r\n                setMsg(\"\")\r\n            }, 5000);\r\n        }\r\n        else {\r\n            setVarient(\"danger\")\r\n            setMsg('Error!')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div >\r\n            <TokenRefreshModal open={open} setOpen={(close) => setOpen(close)} revokeAccess={() => revokeAccess()} />\r\n\r\n            <Navbar bg=\"dark\" variant=\"dark\" style={{ position: 'sticky', top: '0', zIndex: \"1\" }}>\r\n                <Container>\r\n                    <Nav className=\"me-auto\"\r\n                        activeKey={active}\r\n                        onSelect={(selectedKey) => setActive(selectedKey)}\r\n                    >\r\n                        <Nav.Link href=\"\" onClick={() => window.open('/home')} active={location.pathname === '/home' ? true : false} >Get By Date</Nav.Link>\r\n                        <Nav.Link href=\"\" onClick={() => window.open('/workerprofile', '_blank')} active={location.pathname === '/workerprofile' ? true : false} >Worker Profile</Nav.Link>\r\n                        <Nav.Link href=\"\" onClick={() => setShowHide(true)} active={location.pathname === '/resetFees' ? true : false}>Reset Adjustment Fees</Nav.Link>\r\n                        <Nav.Link href=\"\" onClick={() => navigate('/changepass', { user: 'yoel' })} active={location.pathname === '/changepass' ? true : false}>Change Password</Nav.Link>\r\n                        <Nav.Link href=\"\" onClick={() => navigate('/emailpass', { user: 'yoel' })} active={location.pathname === '/emailpass' ? true : false}>Email Password</Nav.Link>\r\n                        <Nav.Link href=\"\" onClick={() => logout()} >Logout</Nav.Link>\r\n\r\n                    </Nav>\r\n                    <Navbar.Text>\r\n                        Signed in as: <a href=\"/changepass\" onClick={() => navigate('changepass')}>{storeData.username.charAt(0).toUpperCase() + storeData.username.slice(1)}</a>\r\n                    </Navbar.Text>\r\n                </Container>\r\n            </Navbar>\r\n            {msg !== \"\" && <Alert style={{ textAlign: \"center\", position: \"sticky\", top: 50 }} key={'success'} variant={varient}>\r\n                {msg}\r\n            </Alert>}\r\n            <ResetAdjustmentFeeModal show={showHide} setShow={(e) => { setShowHide(e) }} token={storeData.accessToken} handleResp={(resp) => handleResp(resp)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React from 'react';\r\n\r\nconst Denied = () => {\r\n    return (<div>ACCESS DENIED<br/>\r\n        <a href=\"/login\">Login</a>\r\n    </div>)\r\n}\r\n\r\nexport default Denied","import axios from \"axios\"\r\n\r\nconst RegisterUserBL = async (username, oldPassword, password) => {\r\n    let resp = await axios.post(process.env.REACT_APP_API_AUTH_URL +`/register`, {\r\n        username: username, oldPassword: oldPassword, password: password\r\n    })\r\n    return resp\r\n}\r\nexport default RegisterUserBL","import React from 'react';\r\nimport { Alert, Button, Col, Form } from 'react-bootstrap'\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RegisterUserBL from '../BL/RegisterUserBL';\r\n\r\nconst RegisterUser = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [oldPass, setOldPass] = useState('')\r\n    const [newPass, setNewPass] = useState('')\r\n    const navigate = useNavigate();\r\n    const [err, setErr] = useState(\"\")\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            let resp = await RegisterUserBL(username, oldPass, newPass)\r\n            if (resp.status === 200) { navigate('/login'); }\r\n        } catch (error) {\r\n            setErr(error.response.data)\r\n            setTimeout(() => {\r\n                setErr(\"\")\r\n            }, 5000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='spaceTop' style={{\r\n            position: 'absolute', left: '50%', top: '50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }}>\r\n            <Col>\r\n                {err !== \"\" && <Alert key={'danger'} variant={'danger'}>\r\n                    {err}\r\n                </Alert>}\r\n                <h3>Register</h3>\r\n                <Form onSubmit={(e) => { submit(e) }}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Username\" onChange={(e) => { setUsername(e.target.value) }} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicOldPassword\">\r\n                        <Form.Label>Old Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => { setOldPass(e.target.value) }} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Label>New Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => { setNewPass(e.target.value) }} />\r\n                    </Form.Group>\r\n                    <Button variant=\"secondary\" type=\"submit\">\r\n                        Register\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n        </div>)\r\n\r\n}\r\nexport default RegisterUser","import axios from 'axios';\r\n\r\nconst GetToken = async (username, password) => {\r\n    let resp = await axios.post(process.env.REACT_APP_API_AUTH_URL + `/login`, { \"username\": username, \"password\": password })\r\n    return resp.data\r\n\r\n}\r\n\r\nexport default GetToken\r\n","\r\n\r\nimport axios from 'axios';\r\n\r\nconst GetProvinces = async (token) => {\r\n    let resp = await axios.get(process.env.REACT_APP_API_URL + `/provinces`, { headers: { \"authorization\": `Bearer ${token}` } })\r\n    return resp.data\r\n\r\n}\r\n\r\nexport default GetProvinces\r\n","\r\n\r\nimport axios from 'axios';\r\n\r\nconst GetPaymentTypes = async (token) => {\r\n    let resp = await axios.get(process.env.REACT_APP_API_URL + `/paymenttypes`, { headers: { \"authorization\": `Bearer ${token}` } })\r\n    return resp.data\r\n\r\n}\r\n\r\nexport default GetPaymentTypes\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst LoadingSpinner = () => {\r\n    return (\r\n        <div className=\"wrapper spinner-container \">\r\n            <div className=\"loading-spinner\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingSpinner","\r\n\r\nimport axios from 'axios';\r\n\r\nconst GetAssociateLeval = async (token) => {\r\n    let resp = await axios.get(process.env.REACT_APP_API_URL + `/getassociateleval`, { headers: { \"authorization\": `Bearer ${token}` } })\r\n    return resp.data\r\n\r\n}\r\n\r\nexport default GetAssociateLeval\r\n","import React from 'react';\r\nimport { Alert, Button, Col, Form } from 'react-bootstrap'\r\nimport { useState, useEffect } from 'react';\r\nimport GetToken from '../BL/JWTtoken'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport GetProvinces from '../BL/GetProvinces';\r\nimport GetPaymentTypes from '../BL/GetPaymentTypes';\r\nimport LoadingSpinner from './../Loader/Loader';\r\nimport GetPhysicianFunc from './GetPhysicianFunc';\r\nimport GetAssociateLeval from './../BL/GetAssociateLeval';\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch()\r\n    const [err, setErr] = useState(\"\")\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: \"AUTHENTICATED\", payload: false })\r\n    }, [])\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true);\r\n        try {\r\n            let resp = await GetToken(username, pass)\r\n            let respProvinces = await GetProvinces(resp.accessToken)\r\n            let physicians = await GetPhysicianFunc(resp.accessToken)\r\n            let paymentTypes = await GetPaymentTypes(resp.accessToken)\r\n            let associateLeval = await GetAssociateLeval(resp.accessToken)\r\n            dispatch({ type: \"ACCESSTOKEN\", payload: resp.accessToken })\r\n            dispatch({ type: \"REFRESHTOKEN\", payload: resp.refreshToken })\r\n            dispatch({ type: \"AUTHENTICATED\", payload: resp.authenticated })\r\n            dispatch({ type: \"USERNAME\", payload: resp.username })\r\n            dispatch({ type: \"EXPIERSIN\", payload: resp.expiresIn })\r\n            dispatch({ type: \"PROVENCE\", payload: respProvinces })\r\n            dispatch({ type: \"PHYSICIANS\", payload: physicians })\r\n            dispatch({ type: \"PAYMENTTYPES\", payload: paymentTypes })\r\n            dispatch({ type: \"ASSOCIATELEVAL\", payload: associateLeval })\r\n            if (resp.authenticated === true) {\r\n                setIsLoading(false)\r\n                navigate('/home');\r\n            }\r\n\r\n        } catch (error) {\r\n            setErr(error.response.data)\r\n            setPass('')\r\n            setIsLoading(false);\r\n            setTimeout(() => {\r\n                setErr(\"\")\r\n            }, 50000);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='spaceTop' style={{\r\n            position: 'absolute', left: '50%', top: '50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }}>\r\n            {isLoading && <LoadingSpinner />}\r\n            <Col>\r\n                {err !== \"\" && <Alert key={'danger'} variant={'danger'}>\r\n                    {err}\r\n                </Alert>}\r\n                <h3>Login</h3>\r\n                <Form onSubmit={(e) => { submit(e) }}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => { setUsername(e.target.value) }} />\r\n                    </Form.Group>\r\n                    <div className=\"pass-wrapper\">\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={pass} onChange={(e) => { setPass(e.target.value) }} />\r\n                            {/* <i>{eye}</i> */}\r\n                        </Form.Group>\r\n                    </div>\r\n                    <Button variant=\"secondary\" type=\"submit\">\r\n                        Login\r\n                    </Button>\r\n                </Form>\r\n                <span><a href='/register'>Need to register?</a></span><br />\r\n                <span><a href='/changepass'>Change password?</a></span>\r\n                <br />\r\n            </Col>\r\n        </div >)\r\n\r\n}\r\nexport default Login\r\n","import axios from \"axios\"\r\n\r\nconst GetWorkerProfile = async (id, token, invalidateCache) => {\r\n    const headers = {\r\n        \"authorization\": `Bearer ${token}`\r\n    }\r\n    invalidateCache && (headers[\"invalidate-cache\"] = invalidateCache)\r\n\r\n    let resp = await axios.post(process.env.REACT_APP_API_URL + '/workprofiles', { id: id },\r\n        { headers: headers })\r\n    return resp.data\r\n}\r\n\r\nexport default GetWorkerProfile","\r\n\r\nimport axios from 'axios';\r\n\r\nconst GetVideoTech = async (token) => {\r\n    let resp = await axios.get(process.env.REACT_APP_API_URL + `/videotech`, { headers: { \"authorization\": `Bearer ${token}` } })\r\n    return resp.data\r\n\r\n}\r\n\r\nexport default GetVideoTech\r\n","\r\n\r\nimport axios from 'axios';\r\n\r\nconst GetServiceTypes = async (token) => {\r\n    let resp = await axios.get(process.env.REACT_APP_API_URL + `/servicetypes`, { headers: { \"authorization\": `Bearer ${token}` } })\r\n    return resp.data\r\n\r\n}\r\n\r\nexport default GetServiceTypes\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport GetServiceTypes from '../BL/GetServiceTypes';\r\n\r\nconst WorkerOptionModal = ({ open, setOpen, header, accessToken, id, setCovrage1, setCovrage2, covrage1, covrage2, superviser2 }) => {\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    };\r\n    const [options, setOptions] = useState([])\r\n    const [selectedOptions, setSelectedOptions] = useState([])\r\n\r\n    const getServiceTypes = async () => {\r\n        let resp = await GetServiceTypes(accessToken)\r\n        setOptions(resp)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getServiceTypes()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (header === 'Supervisor One Covrage') { setSelectedOptions(tryParse(covrage1)) }\r\n        else if (header === 'Supervisor Two Covrage') { setSelectedOptions(tryParse(covrage2)) }\r\n        open === false && setSelectedOptions([])\r\n        open === false && getServiceTypes()\r\n    }, [open]);\r\n\r\n\r\n    const handleChange = (option, isChecked) => {\r\n        let temp = selectedOptions\r\n\r\n        if (isChecked === true) {\r\n            temp.push(option.id)\r\n        }\r\n        else if (isChecked === false) {\r\n            let index = temp.findIndex(x => x === option.id)\r\n            temp.splice(index, 1)\r\n        }\r\n        setSelectedOptions(temp)\r\n\r\n        if (header === 'Supervisor One Covrage') { setCovrage1(temp) }\r\n        if (header === 'Supervisor Two Covrage') { setCovrage2(temp) }\r\n        else { return [] }\r\n    }\r\n\r\n\r\n    const tryParse = (arr) => {\r\n        try {\r\n            if (arr === '') {\r\n                return []\r\n            }\r\n            return JSON.parse(arr)\r\n        } catch (error) {\r\n            return arr\r\n        }\r\n    }\r\n\r\n    const checkBox = (x) => {\r\n        if (superviser2.label === \"Select Second Superviser\") {\r\n            return true\r\n        }\r\n        else {\r\n            return selectedOptions.find(item => item === x.id)\r\n        }\r\n\r\n    }\r\n\r\n    const disableCheckBox = (x) => {\r\n        try {\r\n            if (superviser2.label === 'Select Second Superviser') { return true }\r\n            if (header === 'Supervisor One Covrage') { return tryParse(covrage2).find(i => x.id === i) === undefined ? false : true }\r\n            if (header === 'Supervisor Two Covrage') { return tryParse(covrage1).find(i => x.id === i) === undefined ? false : true }\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={open} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{header}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {options && options.map((x) => {\r\n                        return (\r\n                            <Form.Check key={x.id} type={'checkbox'} disabled={disableCheckBox(x)} label={x.name} id={x.id} defaultChecked={checkBox(x)}\r\n                                name=\"groupOptions\" onClick={(e) => handleChange({ id: x.id, value: x.name }, e.target.checked)} />\r\n                        )\r\n                    })}\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WorkerOptionModal","import axios from 'axios';\r\n\r\nconst UpdateWorkerProfile = async (token, obj, id) => {\r\n    let resp = await axios.post(process.env.REACT_APP_API_URL + `/updateworkerprofile`, { obj: obj, id: id, }, { headers: { \"authorization\": `Bearer ${token}` } })\r\n    return resp.data\r\n\r\n}\r\n\r\nexport default UpdateWorkerProfile","import axios from 'axios';\r\n\r\nconst NewWorkerProfile = async (token, arr) => {\r\n    let resp = await axios.post(process.env.REACT_APP_API_URL + `/newworkprofiles`, { arr: arr }, { headers: { \"authorization\": `Bearer ${token}` } })\r\n    return resp.data\r\n\r\n}\r\n\r\nexport default NewWorkerProfile","import axios from \"axios\"\r\n\r\nconst DeleteWorkerProfile = async (token, id) => {\r\n    let resp = await axios.post(process.env.REACT_APP_API_URL + `/deleteprofile`, { id: id }, { headers: { \"authorization\": `Bearer ${token}` } })\r\n    return resp\r\n}\r\nexport default DeleteWorkerProfile","import React from 'react';\r\nimport moment from 'moment';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport DeleteWorkerProfile from '../BL/DeleteWorkerProfile';\r\n\r\nconst DeleteProfileModual = ({ show, setShow, token, handleResp, worker, id }) => {\r\n    const handleClose = () => setShow(false);\r\n    const deleteProfile = async () => {\r\n        let resp = await DeleteWorkerProfile(token, id)\r\n        handleResp(resp)\r\n    }\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{`${worker.associateName}`}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{`Are you sure you want to delete ${worker.associateType} ${worker.associateName}?`}</Modal.Body>\r\n                <Modal.Body>{`Start Date: ${moment(worker.startDate).format('DD/MM/YYYY')}\\nEnd Date: ${moment(worker.endDate).format('DD/MM/YYYY')}`}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => deleteProfile()}>\r\n                        Delete\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\nexport default DeleteProfileModual;","\r\n\r\nimport axios from 'axios';\r\n\r\nconst GetNewWorkers = async (token) => {\r\n    let resp = await axios.get(process.env.REACT_APP_API_URL + `/newphysicians`, { headers: { \"authorization\": `Bearer ${token}` } })\r\n    return resp.data\r\n\r\n}\r\n\r\nexport default GetNewWorkers\r\n","/* eslint-disable */\r\nimport React from \"react\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { Alert, Button, Card, Form, InputGroup, Table, ToggleButton } from \"react-bootstrap\"\r\nimport Select from 'react-select';\r\nimport { useSelector } from 'react-redux';\r\nimport GetVideoTech from \"../BL/GetVideoTech\";\r\nimport WorkerOptionModal from \"./WorkerOptionModal\";\r\nimport UpdateWorkerProfile from \"../BL/UpdateWorkerProfiles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport NewWorkerProfile from \"../BL/NewWorkerProfile\";\r\nimport { NumbersOnly } from \"../HomePage/NumbersOnly\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DeleteWorkerProfile from \"../BL/DeleteWorkerProfile\";\r\nimport DeleteProfileModual from \"../ResetAdjustmentFeeModal/DeleteProfileModual\";\r\nimport GetNewWorkers from \"../BL/GetNewWorkers\";\r\n\r\nconst WorkerProfileTable = ({ selected, worker, setSelected }) => {\r\n    const [tglSuperviser, setTglSuperviser] = useState(false)\r\n    const [tglIsSupervised, setTglIsSupervised] = useState(false)\r\n    const [directorSupervised, setDirectorsupervised] = useState(false)\r\n    const [supOnegetMoney, setSupOneGetsMoney] = useState(false)\r\n    const [supTwoGetMoney, setSupTwoGetsMoney] = useState(false)\r\n    const [hst, setHst] = useState(false)\r\n    const [active, setActive] = useState(true)\r\n    const [copyProfile, setCopyProfile] = useState(false)\r\n    const [associateName, setAssociateName] = useState({ value: \"Please Select\", label: \"Please Select\" })\r\n    // const [associateName, setAssociateName] = useState(\"\")\r\n    const [associateEmail, setAssociateEmail] = useState(\"\")\r\n    const [associate, setAssociate] = useState({ value: \"Please Select\", label: \"Please Select\" })\r\n    const [superviserOne, setSupervierOne] = useState({ value: \"Please Select\", label: \"Please Select\" })\r\n    const [superviserTwo, setSupervierTwo] = useState({ value: \"Select Second Superviser\", label: \"Select Second Superviser\" })\r\n    const [videoFee, setVideoFee] = useState('0')\r\n    const [provValue, setProvValue] = useState({ value: \"Please Select\", label: \"Please Select\" })\r\n    const [videoTech, setVideoTech] = useState([])\r\n    const [superviserOneCovrage, setSuperviserOneCovrage] = useState([])\r\n    const [superviserTwoCovrage, setSuperviserTwoCovrage] = useState([])\r\n    const [selectedVideoTech, setSelectedVideoTech] = useState({ value: \"Please Select\", label: \"Please Select\" })\r\n    const [inOfficeBlocks, setInOfficeBlocks] = useState('0')\r\n    const [inOfficeBlockHours, setInOfficeBlockHours] = useState('0')\r\n    const [inOfficeBlockTimes, setInOfficeBlockTimes] = useState(\"\")\r\n    const [blocksHourlyRate, setBlocksHourlyRate] = useState('0')\r\n    const [blocksBiWeeklyCharge, setBlocksBiWeeklyCharge] = useState('0')\r\n    const [assessmentRate, setAssessmentRate] = useState('0')\r\n    const [assessmentRate_c, setAssessmentRate_c] = useState('0')\r\n    const [assessmentRate_f, setAssessmentRate_f] = useState('0')\r\n    const [associateFeeBaseRate, setAssociateFeeBaseRate] = useState('0')\r\n    const [associateFeeBaseRate_c, setAssociateFeeBaseRate_c] = useState('0')\r\n    const [associateFeeBaseRate_f, setAssociateFeeBaseRate_f] = useState('0')\r\n    const [associateFeeBaseRateTwo, setAssociateFeeBaseRateTwo] = useState('0')\r\n    const [associateFeeBaseRateTwo_c, setAssociateFeeBaseRateTwo_c] = useState('0')\r\n    const [associateFeeBaseRateTwo_f, setAssociateFeeBaseRateTwo_f] = useState('0')\r\n    const [associateFeebaseRateOverRide33, setAssociateFeeBaseRate33] = useState('0')\r\n    const [associateFeebaseRateOverRide33_c, setAssociateFeeBaseRate33_c] = useState('0')\r\n    const [associateFeebaseRateOverRide33_f, setAssociateFeeBaseRate33_f] = useState('0')\r\n    const [associateFeebaseRateOverRide33Two, setAssociateFeeBaseRate33Two] = useState('0')\r\n    const [associateFeebaseRateOverRide33Two_c, setAssociateFeeBaseRate33Two_c] = useState('0')\r\n    const [associateFeebaseRateOverRide33Two_f, setAssociateFeeBaseRate33Two_f] = useState('0')\r\n    const [associateFeebaseRateOverRide34, setAssociateFeeBaseRate34] = useState('0')\r\n    const [associateFeebaseRateOverRide34_c, setAssociateFeeBaseRate34_c] = useState('0')\r\n    const [associateFeebaseRateOverRide34_f, setAssociateFeeBaseRate34_f] = useState('0')\r\n    const [associateFeebaseRateOverRide34Two, setAssociateFeeBaseRate34Two] = useState('0')\r\n    const [associateFeebaseRateOverRide34Two_c, setAssociateFeeBaseRate34Two_c] = useState('0')\r\n    const [associateFeebaseRateOverRide34Two_f, setAssociateFeeBaseRate34Two_f] = useState('0')\r\n    const [associateFeeBaseRateOverrideAsseements, setAssociateFeeBaseRateOverrideAsseements] = useState(false)\r\n    const [associateFeeBaseRateOverrideAsseements_c, setAssociateFeeBaseRateOverrideAsseements_c] = useState(false)\r\n    const [associateFeeBaseRateOverrideAsseements_f, setAssociateFeeBaseRateOverrideAsseements_f] = useState(false)\r\n    const [associateFeeBaseType, setAssociateFeeBaseType] = useState('')\r\n    const [associateFeeBaseTypeTwo, setAssociateFeeBaseTypeTwo] = useState('')\r\n    const storeData = useSelector(state => state)\r\n    const [superviserSelect, setSuperviserSelect] = useState([])\r\n    const [newWorkers, setNewWorkers] = useState([])\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [modalHeader, setModalHeader] = useState(\"\")\r\n    const [msg, setMsg] = useState('')\r\n    const [varient, setVarient] = useState('success')\r\n    const [nonChargeablesTable, setNonChargeablesTable] = useState(true)\r\n    const [duplicateTable, setDuplicateTable] = useState(true)\r\n    const [associateFeesTable, setAssociateFeesTable] = useState(true)\r\n    const [totalRemittenceTable, setTotalRemittenceTable] = useState(true)\r\n    const [nonRemittablesTable, setNonRemittablesTable] = useState(true)\r\n    const [transactionsTable, setTransactionsTable] = useState(true)\r\n    const [superviseeTotalTabel, setSuperviseeTotalTable] = useState(true)\r\n    const [appliedPaymentsTotalTable, setAppliedPaymentsTotalTable] = useState(true)\r\n    const [comments, setComments] = useState('')\r\n    const [adjustmentFee, setAdjustmentFee] = useState([{ name: \"\", value: 0 }])\r\n    const [adjustmentPaymentFee, setAdjustmentPAymentFee] = useState([{ name: \"\", value: 0 }])\r\n    const dispatch = useDispatch()\r\n    const [subPrac, setSubPrac] = useState(false)\r\n    const [showHide, setShowHide] = useState(false)\r\n    const [assessmentMoneyToSupervisorOne, setAssessmentMoneyToSupervisorOne] = useState(false)\r\n    const [assessmentMoneyToSupervisorTwo, setAssessmentMoneyToSupervisorTwo] = useState(false)\r\n    const [probono, setProbono] = useState(0)\r\n\r\n\r\n    const [date, setDate] = useState(new Date())\r\n    const [endDate, setEndDate] = useState(new Date())\r\n\r\n\r\n    useEffect(() => {\r\n        setSuperviserSelect(superviserSelectOptions(storeData.Physician))\r\n    }, [worker])\r\n\r\n    useEffect(() => {\r\n        videoTechAPI()\r\n    }, [])\r\n\r\n    useEffect(() => { setCopyProfile(false) }, [worker])\r\n\r\n    useEffect(() => {\r\n        const getNewWorker = async () => {\r\n            let arr = []\r\n\r\n            const resp = await GetNewWorkers(storeData.accessToken)\r\n            resp?.forEach(x => {\r\n                arr.push({ value: x.id, label: x.associateName })\r\n            })\r\n            setNewWorkers(arr)\r\n        }\r\n        getNewWorker()\r\n    }, [])\r\n    const superviserSelectOptions = (physicians) => {\r\n        let arr = []\r\n        arr.push({ value: 'NOT SUPERVISED', label: 'NOT SUPERVISED' }, { value: 'EXTERNAL SUPERVISOR', label: 'EXTERNAL SUPERVISOR' })\r\n        physicians.forEach(x => {\r\n            if (!x.associateName.includes(\"Not\")) {\r\n                x.id !== selected && arr.push({ value: x.id, label: x.associateName })\r\n            }\r\n        })\r\n        return arr\r\n    }\r\n\r\n    const provs = () => {\r\n        let arr = []\r\n        storeData.provence.forEach(x => {\r\n            arr.push({ value: x.id, label: x.name })\r\n        })\r\n        return arr\r\n    }\r\n\r\n    const videoTechAPI = async () => {\r\n        let resp = await GetVideoTech(storeData.accessToken)\r\n        let arr = []\r\n        resp.forEach(x => {\r\n            x.id !== selected && arr.push({ value: x.id, label: x.name })\r\n        })\r\n        setVideoTech(arr)\r\n    }\r\n    const levals = () => {\r\n        let arr = []\r\n        try {\r\n            storeData.associateLeval.forEach(x => {\r\n                arr.push({ value: x.id, label: x.leval })\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n        return arr\r\n    }\r\n\r\n    const openModal = (text, id) => {\r\n        setModalHeader(text)\r\n        setShowModal(true)\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(worker)\r\n        if (worker.length !== 0) {\r\n            worker.associateType === 'L1 (Sup Prac)' ? setSubPrac(true) : setSubPrac(false)\r\n            setActive(worker.status)\r\n            setDate(new Date(worker.startDate))\r\n            setEndDate(new Date(worker.endDate))\r\n            setProvValue({ value: worker.site, label: worker.site })\r\n            setAssociate({ value: worker.associateType, label: worker.associateType })\r\n            setAssociateName({ value: worker.associateName, label: worker.associateName })\r\n            setAssociateEmail(worker.associateEmail)\r\n            setTglSuperviser(worker.isSuperviser)\r\n            setTglIsSupervised(worker.isSupervised)\r\n            setDirectorsupervised(worker.IsSupervisedByNonDirector)\r\n            setSupervierOne({ value: worker.supervisor1, label: worker.supervisor1 })\r\n            setSupervierTwo({ value: worker.supervisor1, label: worker.supervisor2 })\r\n            setSuperviserOneCovrage(worker.supervisor1Covrage)\r\n            setSuperviserTwoCovrage(worker.supervisor2Covrage)\r\n            setSupOneGetsMoney(worker.supervisorOneGetsMoney)\r\n            setSupTwoGetsMoney(worker.supervisorTwoGetsMoney)\r\n            setAssessmentMoneyToSupervisorOne(worker.assessmentMoneyToSupervisorOne)\r\n            setAssessmentMoneyToSupervisorTwo(worker.assessmentMoneyToSupervisorTwo)\r\n            setAssociateFeeBaseType(worker.associateFeeBaseType)\r\n            setAssociateFeeBaseTypeTwo(worker.associateFeeBaseType2)\r\n            setProbono(worker.probono)\r\n            setAssessmentRate(worker.assessmentRate)\r\n            setAssessmentRate_c(worker.assessmentRate_c)\r\n            setAssessmentRate_f(worker.assessmentRate_f)\r\n            setAssociateFeeBaseRate(worker.associateFeeBaseRate)\r\n            setAssociateFeeBaseRate_c(worker.associateFeeBaseRate_c)\r\n            setAssociateFeeBaseRate_f(worker.associateFeeBaseRate_f)\r\n            setAssociateFeeBaseRateTwo(worker.associateFeeBaseRateTwo)\r\n            setAssociateFeeBaseRateTwo_c(worker.associateFeeBaseRateTwo_c)\r\n            setAssociateFeeBaseRateTwo_f(worker.associateFeeBaseRateTwo_f)\r\n            setAssociateFeeBaseRate33(worker.associateFeeBaseRateOverrideLessThen)\r\n            setAssociateFeeBaseRate33_c(worker.associateFeeBaseRateOverrideLessThen_c)\r\n            setAssociateFeeBaseRate33_f(worker.associateFeeBaseRateOverrideLessThen_f)\r\n            setAssociateFeeBaseRate33Two(worker.associateFeeBaseRateOverrideLessThenTwo)\r\n            setAssociateFeeBaseRate33Two_c(worker.associateFeeBaseRateOverrideLessThenTwo_c)\r\n            setAssociateFeeBaseRate33Two_f(worker.associateFeeBaseRateOverrideLessThenTwo_f)\r\n            setAssociateFeeBaseRate34(worker.associateFeeBaseRateOverrideGreaterThen)\r\n            setAssociateFeeBaseRate34_c(worker.associateFeeBaseRateOverrideGreaterThen_c)\r\n            setAssociateFeeBaseRate34_f(worker.associateFeeBaseRateOverrideGreaterThen_f)\r\n            setAssociateFeeBaseRate34Two(worker.associateFeeBaseRateOverrideGreaterThenTwo)\r\n            setAssociateFeeBaseRate34Two_c(worker.associateFeeBaseRateOverrideGreaterThenTwo_c)\r\n            setAssociateFeeBaseRate34Two_f(worker.associateFeeBaseRateOverrideGreaterThenTwo_f)\r\n            setAssociateFeeBaseRateOverrideAsseements(worker.associateFeeBaseRateOverrideAsseements)\r\n            setAssociateFeeBaseRateOverrideAsseements_c(worker.associateFeeBaseRateOverrideAsseements_c)\r\n            setAssociateFeeBaseRateOverrideAsseements_f(worker.associateFeeBaseRateOverrideAsseements_f)\r\n            setInOfficeBlocks(worker.inOfficeBlocks)\r\n            setInOfficeBlockHours(worker.inOfficeBlockHours)\r\n            setInOfficeBlockTimes(worker.inOfficeBlockTimes)\r\n            setBlocksBiWeeklyCharge(worker.blocksBiWeeklyCharge)\r\n            setBlocksHourlyRate(worker.blocksHourlyRate)\r\n            setSelectedVideoTech({ value: worker.videoTech, label: worker.videoTech })\r\n            setVideoFee(worker.cahrgeVideoFee)\r\n            setDuplicateTable(worker.duplicateTable)\r\n            setNonChargeablesTable(worker.nonChargeablesTable)\r\n            setAssociateFeesTable(worker.associateFeesTable)\r\n            setTotalRemittenceTable(worker.totalRemittenceTable)\r\n            setNonRemittablesTable(worker.nonRemittablesTable)\r\n            setTransactionsTable(worker.transactionsTable)\r\n            setSuperviseeTotalTable(worker.superviseeTotalTabel)\r\n            setAppliedPaymentsTotalTable(worker.appliedPaymentsTotalTable)\r\n            setComments(worker.comments)\r\n            setAdjustmentFee(JSON.parse(worker.adjustmentFee))\r\n            setAdjustmentPAymentFee(JSON.parse(worker.adjustmentPaymentFee))\r\n\r\n        }\r\n    }, [worker])\r\n\r\n    const removeStatus = (name) => {\r\n        try {\r\n            let status = storeData.Physician.find(x => x.associateName.includes(name))\r\n            return status.status === true ? name.split(\"(Active)\")[0].split(':')[1].trim() : name.split(\"(Not Active)\")[0].split(':')[1].trim()\r\n        } catch (error) {\r\n            return name\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleSave = async (e) => {\r\n        e.preventDefault()\r\n        var temp = {}\r\n        temp.status = active\r\n        temp.startDate = date\r\n        temp.endDate = endDate\r\n        temp.site = provValue.label\r\n        temp.associateType = associate.label\r\n        temp.associateEmail = associateEmail\r\n        temp.associateName = associateName.label.trim()\r\n        temp.isSuperviser = tglSuperviser\r\n        temp.isSupervised = tglIsSupervised\r\n        temp.IsSupervisedByNonDirector = directorSupervised\r\n        temp.supervisor1 = removeStatus(superviserOne.label)\r\n        temp.supervisor1Covrage = superviserOneCovrage\r\n        temp.supervisor2 = removeStatus(superviserTwo.label)\r\n        temp.supervisor2Covrage = superviserTwoCovrage\r\n        temp.supervisorOneGetsMoney = supOnegetMoney\r\n        temp.supervisorTwoGetsMoney = supTwoGetMoney\r\n        temp.assessmentMoneyToSupervisorTwo = assessmentMoneyToSupervisorTwo\r\n        temp.assessmentMoneyToSupervisorOne = assessmentMoneyToSupervisorOne\r\n        temp.chargesHST = hst\r\n        temp.associateFeeBaseType = associateFeeBaseType\r\n        temp.associateFeeBaseType2 = associateFeeBaseTypeTwo\r\n        temp.probono = probono\r\n        temp.assessmentRate = assessmentRate\r\n        temp.assessmentRate_c = assessmentRate_c\r\n        temp.assessmentRate_f = assessmentRate_f\r\n        temp.associateFeeBaseRate = associateFeeBaseRate.trim()\r\n        temp.associateFeeBaseRate_c = associateFeeBaseRate_c.trim()\r\n        temp.associateFeeBaseRate_f = associateFeeBaseRate_f.trim()\r\n        temp.associateFeeBaseRateTwo = associateFeeBaseRateTwo.trim()\r\n        temp.associateFeeBaseRateTwo_c = associateFeeBaseRateTwo_c.trim()\r\n        temp.associateFeeBaseRateTwo_f = associateFeeBaseRateTwo_f.trim()\r\n        temp.associateFeeBaseRateOverrideLessThen = associateFeebaseRateOverRide33.trim()\r\n        temp.associateFeeBaseRateOverrideLessThen_c = associateFeebaseRateOverRide33_c.trim()\r\n        temp.associateFeeBaseRateOverrideLessThen_f = associateFeebaseRateOverRide33_f.trim()\r\n        temp.associateFeeBaseRateOverrideLessThenTwo = associateFeebaseRateOverRide33Two.trim()\r\n        temp.associateFeeBaseRateOverrideLessThenTwo_c = associateFeebaseRateOverRide33Two_c.trim()\r\n        temp.associateFeeBaseRateOverrideLessThenTwo_f = associateFeebaseRateOverRide33Two_f.trim()\r\n        temp.associateFeeBaseRateOverrideGreaterThen = associateFeebaseRateOverRide34.trim()\r\n        temp.associateFeeBaseRateOverrideGreaterThen_c = associateFeebaseRateOverRide34_c.trim()\r\n        temp.associateFeeBaseRateOverrideGreaterThen_f = associateFeebaseRateOverRide34_f.trim()\r\n        temp.associateFeeBaseRateOverrideGreaterThenTwo = associateFeebaseRateOverRide34Two.trim()\r\n        temp.associateFeeBaseRateOverrideGreaterThenTwo_c = associateFeebaseRateOverRide34Two_c.trim()\r\n        temp.associateFeeBaseRateOverrideGreaterThenTwo_f = associateFeebaseRateOverRide34Two_f.trim()\r\n        temp.associateFeeBaseRateOverrideAsseements = associateFeeBaseRateOverrideAsseements\r\n        temp.associateFeeBaseRateOverrideAsseements_c = associateFeeBaseRateOverrideAsseements_c\r\n        temp.associateFeeBaseRateOverrideAsseements_f = associateFeeBaseRateOverrideAsseements_f\r\n        temp.inOfficeBlocks = inOfficeBlocks.trim()\r\n        temp.inOfficeBlockHours = inOfficeBlockHours.trim()\r\n        temp.inOfficeBlockTimes = inOfficeBlockTimes\r\n        temp.blocksBiWeeklyCharge = blocksBiWeeklyCharge\r\n        temp.blocksHourlyRate = blocksHourlyRate.trim()\r\n        temp.videoTech = selectedVideoTech.label\r\n        temp.cahrgeVideoFee = videoFee\r\n        temp.duplicateTable = duplicateTable\r\n        temp.nonChargeablesTable = nonChargeablesTable\r\n        temp.associateFeesTable = associateFeesTable\r\n        temp.totalRemittenceTable = totalRemittenceTable\r\n        temp.nonRemittablesTable = nonRemittablesTable\r\n        temp.transactionsTable = transactionsTable\r\n        temp.superviseeTotalTabel = superviseeTotalTabel\r\n        temp.appliedPaymentsTotalTable = appliedPaymentsTotalTable\r\n        temp.comments = comments\r\n        temp.adjustmentFee = JSON.stringify(adjustmentFee)\r\n        temp.adjustmentPaymentFee = JSON.stringify(adjustmentPaymentFee)\r\n\r\n        let validate = Object.keys(temp).map(key => { return temp[key] })\r\n        // let validateTemp = Object.keys(temp).map(key => { return temp[key] })\r\n        // console.log(temp)\r\n        if (validate.includes(\"Please Select\") || associateFeeBaseType === \"\" || associateFeeBaseTypeTwo === \"\" || date === \"date\") {\r\n            setVarient('danger')\r\n            setMsg(\"Please fill the requied items!\")\r\n            return\r\n        }\r\n        else {\r\n            let tempUser = storeData.Physician\r\n            let resp\r\n\r\n            dispatch({ type: \"WORKER\", payload: temp })\r\n\r\n            if (selected === \"\") { resp = await NewWorkerProfile(storeData.accessToken, temp) }\r\n            else { resp = await UpdateWorkerProfile(storeData.accessToken, temp, worker.id) }\r\n\r\n            if (resp.response === 200 && resp.new_id !== undefined) {\r\n                tempUser.push({ id: resp.new_id.new_id, associateName: associateName })\r\n\r\n                dispatch({ type: \"PHYSICIANS\", payload: tempUser })\r\n\r\n                setVarient('success')\r\n                setMsg('User created!')\r\n                window.location.reload(true);\r\n            }\r\n            else if (resp === 200) {\r\n                let index = tempUser.findIndex(x => x.id === worker.id)\r\n                let status = active === true ? \"(Active)\" : \"(Not Active)\"\r\n\r\n                tempUser[index].associateName = status === true ? tempUser[index].associateName.split(\"(Active)\")[0] + status : tempUser[index].associateName.split(\"(Not Active)\")[0]\r\n                dispatch({ type: \"PHYSICIANS\", payload: tempUser })\r\n\r\n                setVarient('success')\r\n                setMsg('User Updated!')\r\n                // window.location.reload(true);\r\n            }\r\n            else {\r\n                setVarient('danger')\r\n                setMsg(resp.errMsg)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setMsg('')\r\n        }, 10000);\r\n    }, [msg])\r\n\r\n    const handleAddClick = () => {\r\n        setAdjustmentFee([...adjustmentFee, { name: \"\", value: 0 }])\r\n    }\r\n\r\n    const handleAddPaymentClick = () => {\r\n        setAdjustmentPAymentFee([...adjustmentPaymentFee, { name: \"\", value: 0 }])\r\n    }\r\n    const handleRemoveClick = (name, value) => {\r\n        if (adjustmentFee.length === 1) { setAdjustmentFee([{ name: \"\", value: 0 }]) }\r\n        else {\r\n            let temp = adjustmentFee\r\n            let index = adjustmentFee.findIndex(x => x.name === name && x.value === value)\r\n            temp.splice(index, 1)\r\n            setAdjustmentFee([...temp])\r\n        }\r\n    }\r\n    const handleRemovePaymentClick = (name, value) => {\r\n        if (adjustmentPaymentFee.length === 1) { setAdjustmentPAymentFee([{ name: \"\", value: 0 }]) }\r\n        else {\r\n            let temp = adjustmentPaymentFee\r\n            let index = adjustmentPaymentFee.findIndex(x => x.name === name && x.value === value)\r\n            temp.splice(index, 1)\r\n            setAdjustmentPAymentFee([...temp])\r\n        }\r\n\r\n    }\r\n\r\n    const updateAdjustmentArr = (value, item, index) => {\r\n        let tempArr = [...adjustmentFee]\r\n        item === 'name' ? tempArr[index].name = value : tempArr[index].value = value\r\n        setAdjustmentFee(tempArr)\r\n    }\r\n    const updatePaymentAdjustmentArr = (value, item, index) => {\r\n        let tempArr = [...adjustmentPaymentFee]\r\n        item === 'name' ? tempArr[index].name = value : tempArr[index].value = value\r\n        setAdjustmentPAymentFee(tempArr)\r\n    }\r\n\r\n    const clearSuperviser = (e) => {\r\n        setTglIsSupervised(e.currentTarget.checked)\r\n        if (!tglIsSupervised === false) {\r\n            setSupervierOne({ value: \"Please Select\", label: \"Please Select\" })\r\n            setSupervierTwo({ value: \"Select Second Superviser\", label: \"Select Second Superviser\" })\r\n        }\r\n    }\r\n\r\n    const setAssociateLeval = (e) => {\r\n        e.value === 2 ? setSubPrac(true) : setSubPrac(false)\r\n        setAssociate(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let hours = inOfficeBlocks * inOfficeBlockHours\r\n        setBlocksBiWeeklyCharge(isNaN((hours * blocksHourlyRate) * 2) ? 0 : (hours * blocksHourlyRate) * 2)\r\n    }, [blocksHourlyRate, inOfficeBlockHours, inOfficeBlocks])\r\n\r\n    const handleCopyProfile = () => {\r\n        setSelected('')\r\n        setCopyProfile(true)\r\n    }\r\n\r\n    const handleResp = async (resp) => {\r\n        try {\r\n            // let resp = await DeleteWorkerProfile(storeData.accessToken, selected)\r\n            setShowHide(false)\r\n            if (resp.status === 200) {\r\n                setVarient('success')\r\n                setMsg(\"User successfully deleted\")\r\n                setTimeout(() => {\r\n                    window.location.reload(true);\r\n                }, 1000);\r\n            }\r\n            else {\r\n                setVarient('danger')\r\n                setMsg(`Error: ${resp.message}`)\r\n            }\r\n        } catch (error) {\r\n            console.log('dd')\r\n            setVarient('danger')\r\n            setMsg(`Error: ${error.message}`)\r\n        }\r\n\r\n    }\r\n\r\n    const onUserSelect = () => {\r\n\r\n    }\r\n\r\n    const style = { margin: 20 }\r\n    return (\r\n        <>\r\n            <DeleteProfileModual show={showHide} setShow={(e) => { setShowHide(e) }} token={storeData.accessToken} handleResp={(resp) => handleResp(resp)} worker={worker} id={selected} />\r\n\r\n            <ToggleButton\r\n                className=\"toggle-button-center\"\r\n                style={{ marginBottom: 20 }}\r\n                id=\"copyProfile\"\r\n                type=\"checkbox\"\r\n                variant=\"outline-dark\"\r\n                checked={copyProfile}\r\n                disabled={selected === '' ? true : false}\r\n                size=\"sm\"\r\n                onChange={(e) => handleCopyProfile(e)}\r\n            >\r\n                {copyProfile === true ? \"Profile Copied!\" : \"Copy Profile\"}\r\n            </ToggleButton>\r\n            {\" \"}\r\n            <Button\r\n                className=\"toggle-button-center\"\r\n                style={{ marginBottom: 20 }}\r\n                id=\"copyProfile\"\r\n                type=\"checkbox\"\r\n                variant=\"outline-dark\"\r\n                // checked={copyProfile}\r\n                disabled={selected === '' ? true : false}\r\n                size=\"sm\"\r\n                onClick={(e) => setShowHide(!showHide)}\r\n            >\r\n                {'Delete Profile'}\r\n            </Button>\r\n            {msg !== '' && <Alert key={1} style={{ position: 'sticky', top: '70px', zIndex: 1 }} variant={varient}  >\r\n                {msg}\r\n            </Alert>}\r\n            <WorkerOptionModal open={showModal} setOpen={(close) => setShowModal(close)} header={modalHeader} accessToken={storeData.accessToken}\r\n                id={selected} setCovrage1={(e) => { setSuperviserOneCovrage(\"[\" + e + \"]\") }} setCovrage2={(e) => { setSuperviserTwoCovrage(\"[\" + e + \"]\") }}\r\n                covrage1={superviserOneCovrage} covrage2={superviserTwoCovrage} superviser2={superviserTwo}\r\n            />\r\n            <Form onSubmit={(e) => handleSave(e)}>\r\n                <Table className=\"mytable box\">\r\n                    <thead>\r\n                        <Card style={style}>\r\n                            <tr >\r\n                                <th className=\"required toggle-button-left\" >Active</th>\r\n                                <td aria-required className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <ToggleButton\r\n                                            className=\"toggle-button-center\"\r\n                                            id=\"active\"\r\n                                            type=\"checkbox\"\r\n                                            variant=\"outline-dark\"\r\n                                            checked={active}\r\n                                            disabled={worker.status === false}\r\n                                            size=\"sm\"\r\n                                            onChange={(e) => setActive(e.currentTarget.checked)}\r\n                                        >\r\n                                            {active === true ? \"Yes\" : \"No\"}\r\n                                        </ToggleButton>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"required toggle-button-left\" >Start Date</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <DatePicker selected={date} onChange={(date) => setDate(date)} />\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"required toggle-button-left\" >End Date</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <DatePicker selected={endDate} onChange={(date) => setEndDate(date)} />\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"required toggle-button-left\">Site</th>\r\n                                <td aria-required className=\"center-items-table\" >\r\n                                    <div className=\"toggle-button-right\" style={{ width: 300 }}>\r\n                                        <Select\r\n                                            className=\"basic-single\"\r\n                                            classNamePrefix=\"select\"\r\n                                            isSearchable={true}\r\n                                            name=\"color\"\r\n                                            options={provs()}\r\n                                            placeholder=\"Please select\"\r\n                                            value={provValue}\r\n                                            onChange={(e) => setProvValue((e))}\r\n                                        />\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"required toggle-button-left\">Associate Name</th>\r\n                                <td aria-required className=\"center-items-table\" >\r\n                                    <div className=\"toggle-button-right\" style={{ width: 300 }}>\r\n                                        <Select\r\n                                            className=\"basic-single\"\r\n                                            classNamePrefix=\"select\"\r\n                                            isSearchable={true}\r\n                                            name=\"associateName\"\r\n                                            options={newWorkers}\r\n                                            placeholder=\"Please select\"\r\n                                            value={associateName}\r\n                                            onChange={(e) => setAssociateName(e)} />\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            {/* <tr>\r\n                                <th className=\"required toggle-button-left\">Associate Name</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <InputGroup size=\"sm\" >\r\n                                            <Form.Control disabled={true} required aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateName} onChange={(e) => { setAssociateName(e.target.value) }} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n\r\n                                </td>\r\n                            </tr> */}\r\n                            <tr>\r\n                                <th className=\"required toggle-button-left\">Associate Email</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <InputGroup size=\"sm\" >\r\n                                            <Form.Control required aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateEmail} onChange={(e) => { setAssociateEmail(e.target.value) }} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"required toggle-button-left\">Associate Type</th>\r\n                                <td className=\"center-items-table\" >\r\n                                    <div className=\"toggle-button-right\" style={{ width: 300 }}>\r\n                                        <Select\r\n                                            className=\"basic-single\"\r\n                                            classNamePrefix=\"select\"\r\n                                            isSearchable={true}\r\n                                            name=\"color\"\r\n                                            options={levals()}\r\n                                            placeholder=\"Please select\"\r\n                                            value={associate}\r\n                                            onChange={(e) => setAssociateLeval((e))}\r\n                                        />\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </Card>\r\n                        <Card style={style}>\r\n                            <tr>\r\n                                <th className=\"required toggle-button-left\">Is Superviser</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <ToggleButton\r\n                                            className=\"mb-2\"\r\n                                            id=\"toggle-check-2\"\r\n                                            type=\"checkbox\"\r\n                                            variant=\"outline-dark\"\r\n                                            checked={tglSuperviser}\r\n                                            value=\"1\"\r\n                                            size=\"sm\"\r\n                                            onChange={(e) => setTglSuperviser(e.currentTarget.checked)}\r\n                                        >\r\n                                            {tglSuperviser === true ? \"Yes\" : \"No\"}\r\n                                        </ToggleButton>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"required toggle-button-left\">Is Supervised</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <ToggleButton\r\n                                            className=\"mb-2\"\r\n                                            id=\"toggle-check-3\"\r\n                                            type=\"checkbox\"\r\n                                            variant=\"outline-dark\"\r\n                                            checked={tglIsSupervised}\r\n                                            value=\"1\"\r\n                                            size=\"sm\"\r\n                                            onChange={(e) => clearSuperviser(e)}\r\n                                        >\r\n                                            {tglIsSupervised === true ? \"Yes\" : \"No\"}\r\n                                        </ToggleButton>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className={tglIsSupervised === true ? 'required toggle-button-left' : \"toggle-button-left\"}>Is Supervised By Non Director</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <ToggleButton\r\n                                            aria-required={true}\r\n                                            className=\"mb-2\"\r\n                                            id=\"toggle-check4\"\r\n                                            type=\"checkbox\"\r\n                                            variant=\"outline-dark\"\r\n                                            checked={directorSupervised}\r\n                                            value=\"1\"\r\n                                            size=\"sm\"\r\n                                            onChange={(e) => setDirectorsupervised(e.currentTarget.checked)}\r\n                                        >\r\n                                            {directorSupervised === true ? \"Yes\" : \"No\"}\r\n                                        </ToggleButton>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </Card>\r\n                        <Card style={style}>\r\n                            <tr>\r\n                                <th className={'required toggle-button-left'}>Superviser One</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\" style={{ width: 300 }}>\r\n                                        <Select\r\n                                            aria-required={true}\r\n                                            className=\"basic-single\"\r\n                                            classNamePrefix=\"select\"\r\n                                            isSearchable={true}\r\n                                            name=\"superviserOne\"\r\n                                            options={superviserSelect}\r\n                                            placeholder=\"Please select\"\r\n                                            value={superviserOne}\r\n                                            onChange={(e) => setSupervierOne(e)} />\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            {/* <tr>\r\n                                <th className={tglIsSupervised === true ? 'required toggle-button-left' : \"toggle-button-left\"}>Supervisor One Covrage</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <Button disabled={superviserOne.value === 'Please Select'} variant=\"outline-dark\" size=\"sm\" onClick={() => openModal('Supervisor One Covrage', 1)}>Covrage Type</Button>\r\n                                    </div>\r\n\r\n                                </td>\r\n                            </tr> */}\r\n                            <tr>\r\n                                <th className={tglIsSupervised === true ? 'required toggle-button-left' : \" toggle-button-left\"}>Therapy Money to Supervisor One</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right-custom-margin\">\r\n                                        <ToggleButton\r\n                                            className=\"mb-2\"\r\n                                            id=\"toggle-money\"\r\n                                            type=\"checkbox\"\r\n                                            variant=\"outline-dark\"\r\n                                            checked={supOnegetMoney}\r\n                                            value=\"1\"\r\n                                            size=\"sm\"\r\n                                            onChange={(e) => setSupOneGetsMoney(e.currentTarget.checked)}\r\n                                            disabled={supTwoGetMoney}\r\n                                        >\r\n                                            {supOnegetMoney === true ? \"Yes\" : \"No\"}\r\n                                        </ToggleButton>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className={tglIsSupervised === true ? 'required toggle-button-left' : \"toggle-button-left\"}>Assessment Money to Supervisor One</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right-custom-margin\">\r\n                                        <ToggleButton\r\n                                            aria-required={true}\r\n                                            className=\"mb-2\"\r\n                                            id=\"toggle-check5\"\r\n                                            type=\"checkbox\"\r\n                                            variant=\"outline-dark\"\r\n                                            checked={assessmentMoneyToSupervisorOne}\r\n                                            value=\"1\"\r\n                                            size=\"sm\"\r\n                                            onChange={(e) => setAssessmentMoneyToSupervisorOne(e.currentTarget.checked)}\r\n                                            disabled={assessmentMoneyToSupervisorTwo}\r\n                                        >\r\n                                            {assessmentMoneyToSupervisorOne === true ? \"Yes\" : \"No\"}\r\n                                        </ToggleButton>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"toggle-button-left\">Superviser Two</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\" style={{ width: 300 }}>\r\n                                        <Select\r\n                                            className=\"basic-single\"\r\n                                            classNamePrefix=\"select\"\r\n                                            isSearchable={true}\r\n                                            name=\"superviserTwo\"\r\n                                            options={superviserSelect}\r\n                                            placeholder=\"Please select\"\r\n                                            value={superviserTwo}\r\n                                            onChange={(e) => setSupervierTwo(e)} />\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            {/* <tr>\r\n                                <th className=\"toggle-button-left\">Supervisor Two Covrage</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <Button disabled={superviserTwo.label === 'Select Second Superviser'} variant=\"outline-dark\" size=\"sm\" onClick={() => openModal('Supervisor Two Covrage', 2)}>Covrage Type</Button>\r\n                                    </div>\r\n                                </td>\r\n                            </tr> */}\r\n                            <tr>\r\n                                <th className={tglIsSupervised === true ? 'required toggle-button-left' : \"toggle-button-left\"}>Therapy Money to Supervisor Two</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right-custom-margin\">\r\n                                        <ToggleButton\r\n                                            className=\"mb-2\"\r\n                                            id=\"toggle-money-Two\"\r\n                                            type=\"checkbox\"\r\n                                            variant=\"outline-dark\"\r\n                                            checked={supTwoGetMoney}\r\n                                            value=\"1\"\r\n                                            size=\"sm\"\r\n                                            onChange={(e) => setSupTwoGetsMoney(e.currentTarget.checked)}\r\n                                            disabled={supOnegetMoney}\r\n                                        >\r\n                                            {supTwoGetMoney === true ? \"Yes\" : \"No\"}\r\n                                        </ToggleButton>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className={tglIsSupervised === true ? 'required toggle-button-left' : \"toggle-button-left\"}>Assessment Money to Supervisor Two</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right-custom-margin\">\r\n                                        <ToggleButton\r\n                                            aria-required={true}\r\n                                            className=\"mb-2\"\r\n                                            id=\"toggle-check6\"\r\n                                            type=\"checkbox\"\r\n                                            variant=\"outline-dark\"\r\n                                            checked={assessmentMoneyToSupervisorTwo}\r\n                                            value=\"1\"\r\n                                            size=\"sm\"\r\n                                            onChange={(e) => setAssessmentMoneyToSupervisorTwo(e.currentTarget.checked)}\r\n                                            disabled={assessmentMoneyToSupervisorOne}\r\n                                        >\r\n                                            {assessmentMoneyToSupervisorTwo === true ? \"Yes\" : \"No\"}\r\n                                        </ToggleButton>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"required toggle-button-left\">Charges HST</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <ToggleButton\r\n                                            className=\"mb-2\"\r\n                                            id=\"toggle-hst\"\r\n                                            type=\"checkbox\"\r\n                                            variant=\"outline-dark\"\r\n                                            checked={hst}\r\n                                            value=\"1\"\r\n                                            size=\"sm\"\r\n                                            onChange={(e) => setHst(e.currentTarget.checked)}\r\n                                        >\r\n                                            {hst === true ? \"Yes\" : \"No\"}\r\n                                        </ToggleButton>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </Card>\r\n                        <Card style={style}>\r\n                            <tr>\r\n                                <th className=\"required toggle-button-left\">Associate Fee Base Type</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <Form.Check type={'radio'} label={'Online Only'} id={'online'} checked={associateFeeBaseType == 1} name=\"group1\" onChange={() => setAssociateFeeBaseType(1)} />\r\n                                        <Form.Check type={'radio'} label={'In Person Only'} id={'inPerson'} checked={associateFeeBaseType == 2} name=\"group1\" onChange={() => setAssociateFeeBaseType(2)} />\r\n                                        <Form.Check type={'radio'} label={'Both'} id={'both'} checked={associateFeeBaseType == 3} name=\"group1\" onChange={() => setAssociateFeeBaseType(3)} />\r\n                                        <Form.Check type={'radio'} label={'Hybrid (ABOVE SENIOR)'} id={'Hybrid'} checked={associateFeeBaseType == 4} name=\"group1\" onChange={() => setAssociateFeeBaseType(4)} />\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"required toggle-button-left\">Associate Fee Base Type Two</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <Form.Check type={'radio'} label={'Junior Advanced'} id={'junior'} checked={associateFeeBaseTypeTwo == 1} name=\"group2\" onChange={() => setAssociateFeeBaseTypeTwo(1)} />\r\n                                        <Form.Check type={'radio'} label={'Senior Advanced'} id={'senior'} checked={associateFeeBaseTypeTwo == 2} name=\"group2\" onChange={() => setAssociateFeeBaseTypeTwo(2)} />\r\n                                        <Form.Check type={'radio'} label={'Above Senior'} id={'above'} checked={associateFeeBaseTypeTwo == 3} name=\"group2\" onChange={() => setAssociateFeeBaseTypeTwo(3)} />\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </Card>\r\n                        <Card style={style}>\r\n                            {/* <Card.Header style={{ backgroundColor: '#e9ecef' }}>CFIR</Card.Header> */}\r\n                            <tr>\r\n                                {<th className=\"toggle-button-left\">Probono Rate</th>}\r\n                                <td className=\"center-items-table\" style={{ marginRight: 30 }}>\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control style={{ marginRight: 5 }} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={probono}\r\n                                                onChange={(e) => { setProbono(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n\r\n\r\n                        </Card>\r\n                        <Card style={style}>\r\n                            <Card.Header style={{ backgroundColor: '#e9ecef' }}>CFIR</Card.Header>\r\n                            <tr>\r\n                                {<th className=\"toggle-button-left\">Assesment Rate Fee%</th>}\r\n                                <td className=\"center-items-table\" style={{ marginRight: 30 }}>\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control style={{ marginRight: 5 }} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={assessmentRate}\r\n                                                onChange={(e) => { setAssessmentRate(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                {subPrac ? <th className=\"toggle-button-left\">Superviser</th> : <th className=\"toggle-button-left\">Associate Fee Base Rate</th>}\r\n                                <td className=\"toggle-button-right\">\r\n                                    <div>\r\n\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control style={{ marginRight: 5 }} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeeBaseRate}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                            <Form.Control aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeeBaseRateTwo}\r\n                                                onChange={(e) => { setAssociateFeeBaseRateTwo(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                {subPrac ? <th className=\"toggle-button-left\">Worker</th> : <th className=\"toggle-button-left\">Associate Fee Base Rate Override({'<33'})</th>}\r\n                                <td className=\"toggle-button-right\">\r\n                                    <div>\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control style={{ marginRight: 5 }} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"\r\n                                                value={associateFeebaseRateOverRide33}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate33(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                            <Form.Control aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeebaseRateOverRide33Two}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate33Two(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                {subPrac ? <th className=\"toggle-button-left\">CFIR</th> : <th className=\"toggle-button-left\">Associate Fee Base Rate Override({'>34'})</th>}\r\n                                <td className=\"toggle-button-right\">\r\n                                    <div>\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control style={{ marginRight: 5 }} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeebaseRateOverRide34}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate34(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                            <Form.Control aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeebaseRateOverRide34Two}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate34Two(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            {/* <tr>\r\n                                <th className=\"toggle-button-left\">Associate Fee Base Rate Override (Assessments)</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <ToggleButton\r\n                                            className=\"mb-2\"\r\n                                            id=\"associateFeeBaseRateOverrideAsseements\"\r\n                                            type=\"checkbox\"\r\n                                            variant=\"outline-dark\"\r\n                                            checked={associateFeeBaseRateOverrideAsseements}\r\n                                            // value=\"1\"\r\n                                            size=\"sm\"\r\n                                            onChange={(e) => setAssociateFeeBaseRateOverrideAsseements(e.currentTarget.checked)}\r\n                                        >\r\n                                            {associateFeeBaseRateOverrideAsseements === true ? \"Yes\" : \"No\"}\r\n                                        </ToggleButton>\r\n                                    </div>\r\n                                </td>\r\n                            </tr> */}\r\n                        </Card>\r\n                        <Card style={style}>\r\n                            <Card.Header style={{ backgroundColor: '#e9ecef' }}>CBT</Card.Header>\r\n                            <tr>\r\n                                {<th className=\"toggle-button-left\">Assesment Rate Fee%</th>}\r\n                                <td className=\"center-items-table\" >\r\n                                    <div className=\"toggle-button-right\" style={{ marginRight: 30 }}>\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control style={{ marginRight: 5 }} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={assessmentRate_c}\r\n                                                onChange={(e) => { setAssessmentRate_c(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                {subPrac ? <th className=\"toggle-button-left\">Superviser</th> : <th className=\"toggle-button-left\">Associate Fee Base Rate</th>}\r\n                                <td className=\"toggle-button-right\">\r\n                                    <div>\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control style={{ marginRight: 5 }} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeeBaseRate_c}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate_c(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                            <Form.Control aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeeBaseRateTwo_c}\r\n                                                onChange={(e) => { setAssociateFeeBaseRateTwo_c(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                {subPrac ? <th className=\"toggle-button-left\">Worker</th> : <th className=\"toggle-button-left\">Associate Fee Base Rate Override({'<33'})</th>}\r\n\r\n                                <td className=\"toggle-button-right\">\r\n                                    <div>\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control style={{ marginRight: 5 }} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"\r\n                                                value={associateFeebaseRateOverRide33_c}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate33_c(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                            <Form.Control aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeebaseRateOverRide33Two_c}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate33Two_c(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                {subPrac ? <th className=\"toggle-button-left\">CFIR</th> : <th className=\"toggle-button-left\">Associate Fee Base Rate Override({'>34'})</th>}\r\n                                <td className=\"toggle-button-right\">\r\n                                    <div>\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control style={{ marginRight: 5 }} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeebaseRateOverRide34_c}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate34_c(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                            <Form.Control aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeebaseRateOverRide34Two_c}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate34Two_c(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            {/* <tr>\r\n                                <th className=\"toggle-button-left\">Associate Fee Base Rate Override (Assessments)</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <ToggleButton\r\n                                            className=\"mb-2\"\r\n                                            id=\"associateFeeBaseRateOverrideAsseements_c\"\r\n                                            type=\"checkbox\"\r\n                                            variant=\"outline-dark\"\r\n                                            checked={associateFeeBaseRateOverrideAsseements_c}\r\n                                            // value=\"1\"\r\n                                            size=\"sm\"\r\n                                            onChange={(e) => setAssociateFeeBaseRateOverrideAsseements_c(e.currentTarget.checked)}\r\n                                        >\r\n                                            {associateFeeBaseRateOverrideAsseements_c === true ? \"Yes\" : \"No\"}\r\n                                        </ToggleButton>\r\n                                    </div>\r\n                                </td>\r\n                            </tr> */}\r\n                        </Card>\r\n                        <Card style={style}>\r\n                            <Card.Header style={{ backgroundColor: '#e9ecef' }}>CPRI</Card.Header>\r\n                            <tr>\r\n                                {<th className=\"toggle-button-left\">Assesment Rate Fee%</th>}\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\" style={{ marginRight: 30 }}>\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control style={{ marginRight: 5 }} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={assessmentRate_f}\r\n                                                onChange={(e) => { setAssessmentRate_f(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                {subPrac ? <th className=\"toggle-button-left\">Superviser</th> : <th className=\"toggle-button-left\">Associate Fee Base Rate</th>}\r\n                                <td className=\"toggle-button-right\">\r\n                                    <div>\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control style={{ marginRight: 5 }} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeeBaseRate_f}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate_f(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                            <Form.Control aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeeBaseRateTwo_f}\r\n                                                onChange={(e) => { setAssociateFeeBaseRateTwo_f(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                {subPrac ? <th className=\"toggle-button-left\">Worker</th> : <th className=\"toggle-button-left\">Associate Fee Base Rate Override({'<33'})</th>}\r\n                                <td className=\"toggle-button-right\">\r\n                                    <div>\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control style={{ marginRight: 5 }} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"\r\n                                                value={associateFeebaseRateOverRide33_f}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate33_f(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                            <Form.Control aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeebaseRateOverRide33Two_f}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate33Two_f(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                {subPrac ? <th className=\"toggle-button-left\">CFIR</th> : <th className=\"toggle-button-left\">Associate Fee Base Rate Override({'>34'})</th>}\r\n                                <td className=\"toggle-button-right\">\r\n                                    <div>\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control style={{ marginRight: 5 }} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeebaseRateOverRide34_f}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate34_f(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                            <Form.Control aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={associateFeebaseRateOverRide34Two_f}\r\n                                                onChange={(e) => { setAssociateFeeBaseRate34Two_f(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            {/* <tr>\r\n                                <th className=\"toggle-button-left\">Associate Fee Base Rate Override (Assessments)</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n\r\n                                        <ToggleButton\r\n                                            className=\"mb-2\"\r\n                                            id=\"associateFeeBaseRateOverrideAsseements_f\"\r\n                                            type=\"checkbox\"\r\n                                            variant=\"outline-dark\"\r\n                                            checked={associateFeeBaseRateOverrideAsseements_f}\r\n                                            // value=\"1\"\r\n                                            size=\"sm\"\r\n                                            onChange={(e) => setAssociateFeeBaseRateOverrideAsseements_f(e.currentTarget.checked)}\r\n                                        >\r\n                                            {associateFeeBaseRateOverrideAsseements_f === true ? \"Yes\" : \"No\"}\r\n                                        </ToggleButton>\r\n                                    </div>\r\n                                </td>\r\n                            </tr> */}\r\n                        </Card>\r\n                        <Card style={style}>\r\n                            <tr>\r\n                                <th className={associateFeeBaseType === 1 || associateFeeBaseType === 2 ? 'required toggle-button-left' : \"toggle-button-left\"}> In Office Blocks</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control style={{ marginRight: 5 }} placeholder=\"Blocks\" required={true}\r\n                                                aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={inOfficeBlocks} onChange={(e) => { setInOfficeBlocks(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className={associateFeeBaseType === 1 || associateFeeBaseType === 2 ? 'required toggle-button-left' : \"toggle-button-left\"}> In Office Block Hours</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control placeholder=\"Block Hours\" required={associateFeeBaseType === 1 || associateFeeBaseType === 2}\r\n                                                aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={inOfficeBlockHours} onChange={(e) => { setInOfficeBlockHours(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className={associateFeeBaseType === 1 || associateFeeBaseType === 4 ? 'required toggle-button-left' : \"toggle-button-left\"}>Block Hourly Rate</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control required={associateFeeBaseType === 1 || associateFeeBaseType === 4}\r\n                                                aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={blocksHourlyRate}\r\n                                                onChange={(e) => { setBlocksHourlyRate(e.target.value) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className={associateFeeBaseType === 1 || associateFeeBaseType === 4 ? 'required toggle-button-left' : \"toggle-button-left\"}>Blocks Bi Weekly Charge</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <InputGroup size=\"sm\">\r\n                                            <Form.Control disabled={true}\r\n                                                aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={blocksBiWeeklyCharge} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className={\"toggle-button-left\"}>In Office Block Times</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\" >\r\n                                        <InputGroup size=\"sm\" >\r\n                                            <Form.Control as={'textarea'} style={{ width: 350 }} //required={associateFeeBaseType === 1}\r\n                                                aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={inOfficeBlockTimes} onChange={(e) => { setInOfficeBlockTimes(e.target.value) }} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </Card>\r\n                        <Card style={style}>\r\n                            <tr>\r\n                                <th className=\"required toggle-button-left\">Video Technology</th>\r\n                                <td className=\"center-items-table\">\r\n                                    <div className=\"toggle-button-right\" style={{ width: 300 }}>\r\n                                        <Select\r\n                                            className=\"basic-single\"\r\n                                            classNamePrefix=\"select\"\r\n                                            isSearchable={true}\r\n                                            name=\"color\"\r\n                                            options={videoTech}\r\n                                            placeholder=\"Please select\"\r\n                                            value={selectedVideoTech}\r\n                                            onChange={(e) => setSelectedVideoTech((e))} />\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"toggle-button-left\">Charge Video Fee?</th>\r\n                                <td className=\"center-items-table\" >\r\n                                    <div className=\"toggle-button-right\">\r\n                                        <ToggleButton\r\n                                            aria-required={true}\r\n                                            className=\"mb-2\"\r\n                                            id=\"toggle-check8\"\r\n                                            type=\"checkbox\"\r\n                                            variant=\"outline-dark\"\r\n                                            checked={videoFee}\r\n                                            value=\"1\"\r\n                                            size=\"sm\"\r\n                                            onChange={(e) => setVideoFee(e.currentTarget.checked)}\r\n                                        >\r\n                                            {videoFee === true ? \"Yes\" : \"No\"}\r\n                                        </ToggleButton>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </Card>\r\n                        <Card style={style}>\r\n                            <tr>\r\n                                <th className=\"toggle-button-left\">Tables to show on invoice report</th>\r\n                                <td className=\"center-items-table\" >\r\n                                    <div className=\"toggle-button-right\" >\r\n                                        <Form.Check type={'checkbox'} id={`duplicateTable`} label={`Duplicate Table`} checked={duplicateTable} onChange={(e) => setDuplicateTable(e.target.checked)} />\r\n                                        <Form.Check type={'checkbox'} id={`nonChargeablesTable`} label={`Non-chargeables`} checked={nonChargeablesTable} onChange={(e) => setNonChargeablesTable(e.target.checked)} />\r\n                                        <Form.Check type={'checkbox'} id={`associateFeesTable`} label={`Associate Fees Table`} checked={associateFeesTable} onChange={(e) => setAssociateFeesTable(e.target.checked)} />\r\n                                        <Form.Check type={'checkbox'} id={`totalRemittanceTable`} label={`Total Remittance Table`} checked={totalRemittenceTable} onChange={(e) => setTotalRemittenceTable(e.target.checked)} />\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"toggle-button-left\">Tables to show on payment report</th>\r\n                                <td className=\"center-items-table\" >\r\n                                    <div className=\"toggle-button-right\" >\r\n                                        <Form.Check type={'checkbox'} id={`nonRemittablesTable`} label={`Non Remittables Table`} checked={nonRemittablesTable} onChange={(e) => setNonRemittablesTable(e.target.checked)} />\r\n                                        <Form.Check type={'checkbox'} id={`transactionsTable`} label={`Transactions Table `} checked={transactionsTable} onChange={(e) => setTransactionsTable(e.target.checked)} />\r\n                                        <Form.Check type={'checkbox'} id={`superviseeTotalTable`} label={`Supervisee Total Table`} checked={superviseeTotalTabel} onChange={(e) => setSuperviseeTotalTable(e.target.checked)} />\r\n                                        <Form.Check type={'checkbox'} id={`appliedPaymentsTable`} label={`Applied Payments Table`} checked={appliedPaymentsTotalTable} onChange={(e) => setAppliedPaymentsTotalTable(e.target.checked)} />\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </Card>\r\n                        <Card style={style}>\r\n                            {\r\n                                adjustmentFee.map((x, index) => {\r\n                                    return <tr key={index}>\r\n                                        <th className=\"toggle-button-left\">Invoice Adjustment fee</th>\r\n                                        <td className=\"center-items-table\" >\r\n                                            <div className=\"toggle-button-right\" >\r\n                                                <InputGroup size=\"sm\"  >\r\n                                                    <Form.Control aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={x.name} placeholder={'Invoice Adjustment Fee'} style={{ marginRight: '5px' }}\r\n                                                        onChange={(e) => { updateAdjustmentArr(e.target.value, 'name', index) }} />\r\n                                                    <Form.Control aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={x.value}\r\n                                                        onChange={(e) => { updateAdjustmentArr(e.target.value, 'vlaue', index) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                                    <Button style={{ marginLeft: '5px' }} variant=\"dark\" onClick={handleAddClick}>+</Button>\r\n                                                    <Button style={{ marginLeft: '5px' }} variant=\"dark\" onClick={() => handleRemoveClick(x.name, x.value)}>-</Button>\r\n                                                </InputGroup>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                })\r\n                            }\r\n                            {\r\n                                adjustmentPaymentFee.map((x, index) => {\r\n                                    return <tr key={index}>\r\n                                        <th className=\"toggle-button-left\">Payment Adjustment fee</th>\r\n                                        <td className=\"center-items-table\" >\r\n                                            <div className=\"toggle-button-right\" >\r\n                                                <InputGroup size=\"sm\"  >\r\n                                                    <Form.Control aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={x.name} placeholder={'Payment Adjustment Fee'} style={{ marginRight: '5px' }}\r\n                                                        onChange={(e) => { updatePaymentAdjustmentArr(e.target.value, 'name', index) }} />\r\n                                                    <Form.Control aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={x.value}\r\n                                                        onChange={(e) => { updatePaymentAdjustmentArr(e.target.value, 'vlaue', index) }} onKeyPress={(e) => NumbersOnly(e)} />\r\n                                                    <Button style={{ marginLeft: '5px' }} variant=\"dark\" onClick={handleAddPaymentClick}>+</Button>\r\n                                                    <Button style={{ marginLeft: '5px' }} variant=\"dark\" onClick={() => handleRemovePaymentClick(x.name, x.value)}>-</Button>\r\n                                                </InputGroup>\r\n                                                \r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                })\r\n                            }\r\n                        </Card>\r\n\r\n                        <Card style={style}>\r\n                            <tr>\r\n                                <th className=\"toggle-button-left\">Comments</th>\r\n                                <td className=\"center-items-table\" >\r\n                                    <div className=\"toggle-button-right\" style={{ width: 350 }}>\r\n                                        <InputGroup size=\"sm\"  >\r\n                                            <Form.Control as={'textarea'}\r\n                                                aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" value={comments} onChange={(e) => { setComments(e.target.value) }} />\r\n                                        </InputGroup>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </Card>\r\n                    </thead>\r\n                </Table >\r\n                {<Button variant={'dark'} disabled={worker.status === false} type=\"submit\">{selected === \"\" ? \"Save user\" : \"Update user\"}</Button>}\r\n            </Form>\r\n            <br />\r\n            <br />\r\n            <br />\r\n        </ >\r\n    )\r\n}\r\nexport default WorkerProfileTable","import React from 'react';\r\nimport { useEffect, useState } from \"react\"\r\nimport { Alert, Col } from \"react-bootstrap\"\r\nimport { useSelector } from \"react-redux\";\r\nimport Select from 'react-select';\r\nimport GetWorkerProfile from \"../BL/GetWorkerProfile\";\r\nimport WorkerProfileTable from './TablesColumns';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst WorkerProfiles = () => {\r\n    const [physicians, setPhysicians] = useState([])\r\n    const storeData = useSelector(state => state)\r\n    const [physicianNmae, setPhysicianName] = useState('')\r\n    const [worker, setWorker] = useState([])\r\n    const dispatch = useDispatch()\r\n    const [err, setErr] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        setPhysicians(storeData.Physician)\r\n    }, [storeData.Physician])\r\n\r\n    const physiciansOptions = () => {\r\n        let arr = []\r\n        physicians.forEach(x => {\r\n            arr.push({ value: x.id, label: x.associateName })\r\n        })\r\n        return arr\r\n    }\r\n    const handleChange = async (id) => {\r\n        try {\r\n            let resp = await GetWorkerProfile(id, storeData.accessToken)\r\n            if (resp.length !== 0) {\r\n                setWorker(resp[0])\r\n                dispatch({ type: \"WORKER\", payload: resp[0] })\r\n                setPhysicianName(id)\r\n            }\r\n            else if (resp.length === 0) {\r\n                setErr(\"User not found, please check with your administrator!\")\r\n                setTimeout(() => {\r\n                    setErr(\"\")\r\n                }, 5000);\r\n            }\r\n        } catch (error) {\r\n            setErr(String(error))\r\n        }\r\n    }\r\n\r\n    return (<div className=\"spaceTop\">\r\n        <br />\r\n        <br />\r\n        {err !== '' && <Alert key={1} variant={'danger'}  >\r\n            {err}\r\n        </Alert>}\r\n        <Col>\r\n            <Select\r\n                className=\"basic-single\"\r\n                styles={{ zIndex: 1 }}\r\n                classNamePrefix=\"select\"\r\n                isSearchable={true}\r\n                name=\"color\"\r\n                options={physiciansOptions()}\r\n                placeholder=\"Please select\"\r\n                onChange={(e) => handleChange((e.value))}\r\n            />\r\n            <br />\r\n            <WorkerProfileTable selected={physicianNmae} worker={worker} setSelected={(e) => setPhysicianName(e)} />\r\n\r\n\r\n        </Col>\r\n\r\n\r\n\r\n\r\n\r\n    </div>)\r\n}\r\n\r\nexport default WorkerProfiles","import axios from 'axios'\r\nimport moment from 'moment'\r\nimport saveAs from 'file-saver';\r\n\r\n\r\nconst GetFile = async (start, end, token, reportType, users, action, videoFee, type, invalidateCache) => {\r\n    const headers = {\r\n        \"authorization\": `Bearer ${token}`\r\n    }\r\n    invalidateCache && (headers[\"invalidate-cache\"] = invalidateCache)\r\n    let resp = await axios.post(process.env.REACT_APP_API_URL + '/generatepdf', {\r\n        start: moment(start).format('YYYY-MM-DD'), end: moment(end).format('YYYY-MM-DD'),\r\n        users: users, action: action, videoFee, reportType, actionType: type\r\n    }, { responseType: 'blob', headers: headers })\r\n\r\n    if (action === 'email') {\r\n        return resp\r\n    }\r\n    else if (reportType === 'singlepdf') {\r\n        const file = new Blob([resp.data], { type: 'application/pdf' });\r\n\r\n        let date = new Date()\r\n\r\n        let a = document.createElement(\"a\");\r\n        a.style = \"display: none\";\r\n\r\n        let url = window.URL.createObjectURL(file);\r\n        a.href = url;\r\n        if (users?.map(x => x.associateName)[0].includes('.')) {\r\n            a.download = `${type}_${users?.map(x => x.associateName)[0]}_${date.toJSON().slice(0, 10)}_${date.toLocaleTimeString().slice(0, 5)}.pdf`\r\n        }\r\n        else {\r\n            a.download = `${type}_${users?.map(x => x.associateName)[0]}_${date.toJSON().slice(0, 10)}_${date.toLocaleTimeString().slice(0, 5)}`; // gives it a name via an a tag\r\n        }\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n\r\n        // const urlOne = URL.createObjectURL(file)\r\n        // window.open(urlOne)\r\n\r\n\r\n        return resp\r\n    }\r\n    else if (reportType === 'multipdf') {\r\n        const file = new Blob([resp.data], { type: 'application/zip' });\r\n        let date = new Date()\r\n        var filename = type + \"_reports_\" + date.toJSON().slice(0, 10) + \"T\" + date.toLocaleTimeString().slice(0, 5) + \".zip\";\r\n        saveAs(file, filename)\r\n        if (action === 'both') {\r\n            saveAs(file, `/text/${filename}`)\r\n        }\r\n        return resp\r\n    }\r\n}\r\nexport default GetFile","\r\n\r\nimport axios from 'axios';\r\n\r\nconst GetAssociateTypes = async (token, associateType) => {\r\n    let resp = await axios.post(process.env.REACT_APP_API_URL + `/associatetypes`, { associateType: associateType }, { headers: { \"authorization\": `Bearer ${token}` } })\r\n    return resp.data\r\n\r\n}\r\n\r\nexport default GetAssociateTypes","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst EmailConfirmationModal = ({ show, setShow, reportType, sendEmails }) => {\r\n    const handleClose = () => setShow(false);\r\n    const handleSend = () => {\r\n        sendEmails(reportType)\r\n        setShow(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal  show={show} onHide={handleClose} centered={true}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{`Send Emails (${reportType.replace(/^./, reportType[0].toUpperCase())})`}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure you want to send emails to <b>ALL</b> users?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => handleSend()}>\r\n                        Send\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </>\r\n    );\r\n}\r\nexport default EmailConfirmationModal;","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, ButtonGroup, Table, Alert } from \"react-bootstrap\";\r\nimport { useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport GetAssociateTypes from \"../BL/GetAssociateTypes\";\r\nimport GetFile from \"../DALs/GetFileByDate\";\r\nimport EmailConfirmationModal from \"../ResetAdjustmentFeeModal/EmailConfirmationModal\";\r\n\r\nconst MainTable = ({ date, loading, videoFee, InvalidateCache }) => {\r\n    const storeData = useSelector(state => state)\r\n    const [provence, setProvence] = useState([])\r\n    const [selected, setSelected] = useState(\"\")\r\n    const [chbx, setChbx] = useState([])\r\n    const [errMsg, setErrMsg] = useState(\"\")\r\n    const [varient, setVarient] = useState('danger')\r\n    const [showHide, setShowHide] = useState(false)\r\n    const [reportType, setReportType] = useState('')\r\n\r\n    let lines = [1]\r\n    // let chbxValue = []\r\n    useEffect(() => { setSelected('') }, [])\r\n\r\n    useEffect(() => {\r\n        setProvence(storeData.provence)\r\n    }, [storeData.provence])\r\n\r\n    const optionsArr = [\r\n        { value: 'associateType', label: \"Run all reports for all therapists\" },\r\n        { value: 'supervisers', label: \"Run reports for Supervisors only\" },\r\n        { value: 'L1', label: \"Run reports for L1 only\" },\r\n        { value: 'L2', label: \"Run reports for L2 only\" },\r\n        { value: 'L3', label: \"Run reports for L3 only\" },\r\n        { value: 'L4', label: \"Run reports for L4 only\" },\r\n    ]\r\n    const updateChbxValue = (row, name, checked) => {\r\n        let temp = chbx\r\n        let index = temp.findIndex(x => x.row === row && x.name === name)\r\n        if (index !== -1) { temp.splice(index, 1) }\r\n        temp.push({ row, name, checked })\r\n        setChbx(temp)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setSelected(e)\r\n    }\r\n\r\n\r\n    const handleEmailClick = (type) => {\r\n        if (chbx.filter(x => x.checked === true).length === 0) {\r\n            setErrMsg('Please select one or more sites')\r\n            setVarient('danger')\r\n        }\r\n        else {\r\n            setReportType(type)\r\n            setShowHide(true)\r\n            setErrMsg(\"\")\r\n        }\r\n    }\r\n\r\n    const runReport = (type, action) => {\r\n        if (chbx.filter(x => x.checked === true).length === 0) {\r\n            setErrMsg('Please select one or more sites')\r\n            setVarient('danger')\r\n        }\r\n        else {\r\n            setErrMsg(\"\")\r\n            getFiles(action, type)\r\n        }\r\n    }\r\n\r\n    const isDisabled = date.length === 0 || selected === ''\r\n\r\n    const getFiles = async (action, type) => {\r\n        // let activeWorkers = []\r\n        try {\r\n            loading(true)\r\n\r\n            //******Filter Active Workers & select only superviser/supervisees */\r\n            let activeWorkers = []\r\n            let workersTemp = await GetAssociateTypes(storeData.accessToken, selected.value, chbx)\r\n            workersTemp.length === 0 && setErrMsg(\"No user found in this catagory, please select another option!\")\r\n            workersTemp.length === 0 && setVarient('danger')\r\n            if (selected.value === 'superviser') {\r\n                activeWorkers = workersTemp\r\n                    .filter(x => x.status === true)\r\n                    .filter(x => x.isSuperviser === true || x.isSupervised === true)\r\n            }\r\n            else {\r\n                activeWorkers = workersTemp.filter(x => x.status === true)\r\n            }\r\n            // let activeWorkers = workersTemp.filter(x => x.status === true)\r\n            //**************Filter by city *******************/\r\n\r\n            let activeChbxValue = chbx.filter(x => x.checked === true).map(x => x.name)\r\n            let filterSites = activeWorkers.filter(x => activeChbxValue.includes(x.site))\r\n            if (filterSites.length === 0) {\r\n                setErrMsg(`No users found in ${activeChbxValue[0]}, please select another city!`)\r\n                setVarient('danger')\r\n            }\r\n            else {\r\n                let resp = await GetFile(date[0], date[1], storeData.accessToken, 'multipdf', filterSites, action, videoFee, type, InvalidateCache)\r\n                if (resp.status === 200) {\r\n                    setVarient('success')\r\n                    if (action === 'email') {\r\n                        setErrMsg('Emails sent!')\r\n                    }\r\n                    else {\r\n                        setErrMsg('Download compleate!')\r\n                    }\r\n                    setTimeout(() => {\r\n                        setErrMsg(\"\")\r\n                    }, 300000);\r\n                }\r\n            }\r\n            loading(false)\r\n        } catch (error) {\r\n            setErrMsg(String(error))\r\n            setVarient('danger')\r\n            // setTimeout(() => {\r\n            //     setErrMsg(\"\")\r\n\r\n            // }, 10000);\r\n            loading(false)\r\n        }\r\n    }\r\n\r\n    const tbodyTemplate = (x, index) =>\r\n        <tr key={index}>\r\n            {provence.map((prov, indexKey) => {\r\n                return <td key={indexKey}><Form.Check type={'checkbox'} onChange={(e) => updateChbxValue(x, prov.name, e.target.checked)} id={x} /></td>\r\n            })}\r\n            <td >\r\n                <ButtonGroup size=\"sm\">\r\n                    <Button disabled={isDisabled} variant=\"secondary\" onClick={() => runReport('invoice', 'run')}>Invoice</Button>\r\n                    <Button disabled={isDisabled} variant=\"secondary\" onClick={() => runReport('payment', 'run')}>Payment</Button>\r\n                    {/* <Button disabled={isDisabled} variant=\"secondary\" onClick={() => runReport('both', 'run')}>Both</Button> */}\r\n                    {/* <Button disabled={isDisabled} variant=\"secondary\" onClick={() => runReport('save', 'save')}>Save</Button> */}\r\n                </ButtonGroup>\r\n            </td>\r\n            <td >\r\n                <ButtonGroup size=\"sm\">\r\n                    <Button disabled={isDisabled} variant=\"secondary\" onClick={() => handleEmailClick('invoice')}>Invoice</Button>\r\n                    <Button disabled={isDisabled} variant=\"secondary\" onClick={() => handleEmailClick('payment')}>Payment</Button>\r\n                    {/* <Button disabled={isDisabled} variant=\"secondary\" onClick={() => runReport('both', 'email')}>Both</Button> */}\r\n                </ButtonGroup>\r\n            </td>\r\n        </tr>\r\n\r\n    return (\r\n        <div>\r\n            {showHide && <EmailConfirmationModal show={showHide} setShow={(e) => { setShowHide(e) }} reportType={reportType} sendEmails={(type) => { runReport(type, 'email') }} />}\r\n            {errMsg !== \"\" && <Alert key={1} variant={varient}>\r\n                {errMsg}\r\n            </Alert>}\r\n            <Select\r\n                className=\"basic-single\"\r\n                classNamePrefix=\"select\"\r\n                isSearchable={true}\r\n                name=\"color\"\r\n                options={optionsArr}\r\n                placeholder=\"Please select\"\r\n                onChange={(e) => handleChange((e))}\r\n            />\r\n            <br />\r\n            <Table>\r\n                <thead>\r\n                    <tr className=\"same-col-widths\">\r\n                        {provence.map((province, index) => { return <th key={index}>{province.name}</th> })}\r\n                        <th>Run</th>\r\n                        <th>Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {lines.map((x, index) => { return tbodyTemplate(x, index) })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MainTable","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Alert, Button, Col, Form, Row, Table } from 'react-bootstrap'\r\nimport { useSelector } from \"react-redux\";\r\nimport GetFile from '../DALs/GetFileByDate';\r\nimport Select from 'react-select';\r\nimport MainTable from \"./Table\";\r\nimport { NumbersOnly } from \"./NumbersOnly\";\r\nimport GetWorkerProfile from \"../BL/GetWorkerProfile\";\r\nimport LoadingSpinner from \"../Loader/Loader\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Cookies from 'universal-cookie';\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\n\r\nconst Main = () => {\r\n  const [date, setDate] = useState([new Date()]);\r\n  const storeData = useSelector(state => state)\r\n  const [videoFee, setVideoFee] = useState(0)\r\n  const dispatch = useDispatch()\r\n  const [physicians, setPhysicians] = useState([])\r\n  const [selectedUser, setSelectedUser] = useState(\"\")\r\n  const [err, setErr] = useState(\"\")\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [addEndDate, setAddEndDate] = useState(false)\r\n  const [endDate, setEndDate] = useState('')\r\n  const numberFormat = Intl.NumberFormat()\r\n  const cookies = new Cookies();\r\n  const [InvalidateCache, setInvalidateCache] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    setPhysicians(storeData.Physician)\r\n  }, [storeData.Physician])\r\n\r\n  const onStartDateChange = useCallback((startDate) => {\r\n    cookies.set('startDate', startDate, { maxAge: 2629800000 });\r\n    var temp = []\r\n    var endateTemp = new Date(startDate);\r\n    endateTemp.setDate(endateTemp.getDate() + 13);\r\n    setEndDate(endateTemp)\r\n    temp.push(startDate)\r\n    temp.push(endateTemp)\r\n    setDate(temp);\r\n  }, [cookies]);\r\n\r\n  function areDatesEqual(date1, date2) {\r\n    return date1.getTime() === date2.getTime();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (addEndDate === false) {\r\n      let cookieStartDate = new Date(cookies.get('startDate'));\r\n      if (!moment(cookieStartDate).isValid()) {\r\n        cookieStartDate = new Date();\r\n      }\r\n\r\n      // Check if the date has actually changed before calling onStartDateChange\r\n      if (date[0] !== undefined && !areDatesEqual(cookieStartDate, date[0])) {\r\n        onStartDateChange(cookieStartDate);\r\n      }\r\n    }\r\n  }, [addEndDate, cookies, date, onStartDateChange]);\r\n\r\n\r\n  const onEndDateChange = (endDate) => {\r\n    var temp = date\r\n    temp.splice(1, 1)\r\n    temp.push(endDate)\r\n    setDate(temp);\r\n    setEndDate(endDate)\r\n  }\r\n  const style = { width: '50%', marginRight: 'auto', marginLeft: 'auto' }\r\n\r\n  const physiciansOptions = () => {\r\n    let arr = []\r\n    physicians.forEach(x => {\r\n      arr.push({ value: x.id, label: x.associateName })\r\n    })\r\n    return arr\r\n  }\r\n\r\n  const handleUserChange = (id) => {\r\n    setSelectedUser(id.value)\r\n  }\r\n\r\n  const getWorker = async () => {\r\n    try {\r\n      if (isNaN(numberFormat.format(videoFee))) {\r\n        setErr('Please enter a video fee amount')\r\n        setTimeout(() => {\r\n          setErr(\"\")\r\n        }, 5000);\r\n      }\r\n      else {\r\n        setIsLoading(true)\r\n        let resp = await GetWorkerProfile(selectedUser, storeData.accessToken, InvalidateCache)\r\n        await GetFile(date[0], date[1], storeData.accessToken, 'singlepdf', resp, 'run', videoFee, 'payment', InvalidateCache)\r\n        await GetFile(date[0], date[1], storeData.accessToken, 'singlepdf', resp, 'run', videoFee, 'invoice', InvalidateCache)\r\n        setIsLoading(false)\r\n\r\n      }\r\n\r\n    } catch (error) {\r\n      if (error?.response?.status === 403) dispatch({ type: \"AUTHENTICATED\", payload: false })\r\n      setErr(String(error))\r\n      setTimeout(() => {\r\n        setErr(\"\")\r\n      }, 10000);\r\n      setIsLoading(false)\r\n\r\n    }\r\n  }\r\n\r\n  const handleVideoFeeChange = (e) => {\r\n    cookies.set('viedoFee', e, { maxAge: 2629800000 });\r\n    setVideoFee(e)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setVideoFee(cookies.get('viedoFee'))\r\n\r\n  }, [])\r\n  return (\r\n    <Col style={{ paddingTop: '80px' }}>\r\n      {isLoading && <LoadingSpinner />}\r\n      {err !== \"\" && <Alert key={'danger'} variant={'danger'}>\r\n        {err}\r\n      </Alert>}\r\n      <Row style={{ display: 'inline-flex', justifyContent: 'center', width: 300 }}>\r\n        <DatePicker selected={date[0]} onChange={(date) => onStartDateChange(date)} />\r\n        <br />\r\n        <br />\r\n        {addEndDate && <DatePicker selected={endDate} onChange={(date) => onEndDateChange(date)} />}\r\n      </Row>\r\n      <br />\r\n      {date[0] && <Form.Check style={{ display: 'inline-table' }} type={'checkbox'} label={'Change End Date?'} onChange={(e) => setAddEndDate(e.target.checked)} name=\"group2\" id=\"radio1\" />}\r\n\r\n      <br />\r\n      <Col>\r\n        <Table >\r\n          <tbody>\r\n            {storeData.paymentTypes.map((x, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <th>{x.name}</th>\r\n                  <td>{x.percentage}</td>\r\n                  <td>{x.ammount}</td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n        <Table style={style}>\r\n          <thead>\r\n            <tr>\r\n              <td >\r\n                <Form.Control required={true} aria-label=\"Small\" size=\"sm\" aria-describedby=\"inputGroup-sizing-sm\" onKeyPress={(e) => NumbersOnly(e)} contentEditable={true}\r\n                  onChange={(e) => handleVideoFeeChange(e.target.value)} value={videoFee} placeholder=\"Video fee (For All Users)\" />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td >\r\n                <Form.Check style={{ display: 'inline-table' }}\r\n                  type={'checkbox'} label={'Load Latest Information'}\r\n                  onChange={(e) => setInvalidateCache(e.target.checked)} name=\"group3\" id=\"radio2\" />\r\n              </td>\r\n            </tr>\r\n          </thead>\r\n        </Table>\r\n        <div style={{ borderWidth: '1px', borderStyle: 'solid', paddingTop: '9px', paddingLeft: '5px', paddingRight: '5px' }}>\r\n          <Select\r\n            styles={{ paddingBottem: '5px' }}\r\n            className=\"\"\r\n            classNamePrefix=\"select\"\r\n            isSearchable={true}\r\n            name=\"color\"\r\n            options={physiciansOptions()}\r\n            placeholder=\"Please select\"\r\n            onChange={(e) => handleUserChange((e))}\r\n          />\r\n          <div style={{ paddingTop: '9px' }} ></div>\r\n          {<Button style={{ marginBottom: '9px' }} disabled={date.length === 0 || selectedUser === \"\"} variant=\"secondary\" onClick={() => getWorker()}>{\"Run single user report\"}</Button>}\r\n        </div>\r\n\r\n\r\n        <br />\r\n\r\n        <MainTable date={date} loading={(e) => setIsLoading(e)} videoFee={videoFee} InvalidateCache={InvalidateCache} />\r\n      </Col>\r\n    </Col >\r\n  )\r\n}\r\nexport default Main","import axios from \"axios\"\r\n\r\nconst ChangePasswordBL = async (username, oldPassword, nerwPassword) => {\r\n    let resp = await axios.post(process.env.REACT_APP_API_AUTH_URL +`/changepass`, {\r\n        username: username, oldpassword: oldPassword, newpassword: nerwPassword\r\n    })\r\n    return resp\r\n}\r\nexport default ChangePasswordBL","import React from 'react';\r\nimport { Alert, Button, Col, Form } from 'react-bootstrap'\r\nimport { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport ChangePasswordBL from '../BL/ChangePasswordBL';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst ChangePassword = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [oldPass, setOldPass] = useState('')\r\n    const [newPass, setNewPass] = useState('')\r\n    const [err, setErr] = useState(\"\")\r\n    const [varient, setVarient] = useState('danger')\r\n    const location = useLocation();\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            let resp = await ChangePasswordBL(username, oldPass, newPass)\r\n            console.log(resp.status)\r\n\r\n            if (resp.status === 200) {\r\n                setVarient('success');\r\n                setErr(\"Password successfully changed!\")\r\n            }\r\n        } catch (error) {\r\n            setVarient('danger')\r\n            setErr(error.response.data)\r\n        }\r\n    }\r\n    useEffect(() => { console.log(location) }, [])\r\n    return (\r\n        <div className='spaceTop' style={{\r\n            position: 'absolute', left: '50%', top: '50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }}>\r\n            <Col>\r\n                {err !== \"\" && <Alert key={varient} variant={varient}>\r\n                    {err}\r\n                </Alert>}\r\n                <h3>Change Password</h3>\r\n                <Form onSubmit={(e) => { submit(e) }}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Username\" onChange={(e) => { setUsername(e.target.value) }} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicOldPassword\">\r\n                        <Form.Label>Old Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => { setOldPass(e.target.value) }} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Label>New Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => { setNewPass(e.target.value) }} />\r\n                    </Form.Group>\r\n                    <Button variant=\"secondary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n        </div>)\r\n}\r\n\r\nexport default ChangePassword","import axios from 'axios';\r\n\r\nconst UpdateEmailPasswordBL = async (token, password) => {\r\n    let resp = await axios.post(process.env.REACT_APP_API_URL + '/updateemailpassword', { password: password }, { headers: { \"authorization\": `Bearer ${token}` } })\r\n    return resp\r\n}\r\nexport default UpdateEmailPasswordBL","import React from 'react';\r\nimport { useState } from \"react\";\r\nimport { Alert, Button, Form } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport UpdateEmailPasswordBL from \"../BL/UpdateEmailPasswordBL\";\r\n\r\nconst UpdateEmailPassword = () => {\r\n    const [pass, setPass] = useState(\"\")\r\n    const storeData = useSelector(state => state)\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [varient, setVarient] = useState(\"danger\")\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            let resp = await UpdateEmailPasswordBL(storeData.accessToken, pass)\r\n            if (resp.status === 200) {\r\n                setPass(\"\")\r\n                setVarient('success')\r\n                setMsg('Password has been updated')\r\n                setTimeout(() => {\r\n                    setMsg('')\r\n                }, 5000);\r\n            }\r\n\r\n        } catch (error) {\r\n            setPass(\"\")\r\n            setVarient(\"danger\")\r\n            setMsg(error.message)\r\n            setTimeout(() => {\r\n                setMsg('')\r\n            }, 5000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ paddingTop: '80%' }}>\r\n            {msg !== \"\" && <Alert key={varient} variant={varient}>\r\n                {msg}\r\n            </Alert>}\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>{`Update email password`}</Form.Label>\r\n                    <Form.Control type={'password'} placeholder=\"Password\" value={pass} onChange={(e) => setPass(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Button variant=\"dark\" type=\"submit\">\r\n                    Update Password\r\n                </Button>\r\n            </Form>\r\n            <div style={{ position: 'absolute', left: '30%', right: '30%' }}>\r\n                {`This password is NOT the account password, this is the \"App Password\" in the email account settings!`}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default UpdateEmailPassword","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"../NavBar\";\r\nimport Denied from \"../Login/Denied\";\r\nimport { useSelector } from \"react-redux\";\r\nimport RegisterUser from './../RegisterUsers/RegisterUser';\r\nimport Login from \"../Login/Login\";\r\nimport WorkerProfiles from './../Workers/WorkerProfiles';\r\nimport Main from './../HomePage/Main';\r\nimport ChangePassword from './../ChangePassword/ChangePassword';\r\nimport UpdateEmailPassword from \"../UpdateEmailPassword/UpdateEmailPassword\";\r\n\r\nconst Routing = () => {\r\n    const storeData = useSelector(state => state)\r\n    const [loggedIn, setLoggedin] = useState(false)\r\n    // const [open, setOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        revokeAccess()\r\n        // setTimeout(() => {\r\n        //     setLoggedin(false)\r\n        //     console.log(\"loggedout\")\r\n        // }, 5000);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setLoggedin(storeData.authenticated)\r\n    }, [storeData.authenticated])\r\n\r\n    const revokeAccess = () => {\r\n        setTimeout(() => {\r\n            setLoggedin(false)\r\n        }, 43200000);\r\n    }\r\n    return (\r\n        <Router>\r\n            <div className=\"sticky\">{loggedIn && <NavBar></NavBar>}</div>\r\n            {/* <RefreshToeknModal open={open} setOpen={(close) => setOpen(close)} revokeAccess={() => revokeAccess()} /> */}\r\n            <div className=\"App\">\r\n                <div className=\"spaceTop\">\r\n                    <Routes>\r\n                        <Route exact path=\"/home\" element={loggedIn ? <Main /> : <Denied />} />\r\n                        <Route exact path=\"/workerprofile\" element={loggedIn ? <WorkerProfiles /> : <Denied />} />\r\n                        <Route exact path=\"/changepass\" element={<ChangePassword />} />\r\n                        <Route exact path=\"/emailpass\" element={<UpdateEmailPassword />} />\r\n                        <Route path=\"/register\" element={<div className=\"App\"><RegisterUser /></div>} />\r\n                        <Route path=\"/login\" element={<div className=\"App\"><Login /></div>} />\r\n                        <Route path=\"/logout\" element={<div className=\"App\"><Denied /></div>} />\r\n                        <Route path=\"/\" element={<div className=\"App\"><Login /></div>} />\r\n                    </Routes>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n\r\n    );\r\n}\r\n\r\nexport default Routing;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Routing from './Router/Routing';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div >\r\n      <div>\r\n        <Routing />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const appReducer = (state = {\r\n    accessToken: \"\",\r\n    refreshToken: \"\",\r\n    authenticated: false,\r\n    expiresIn: 1800000,\r\n    provence: [],\r\n    Physician: [],\r\n    worker: [],\r\n    paymentTypes: [],\r\n    associateLeval: []\r\n\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"ACCESSTOKEN\":\r\n            return { ...state, accessToken: action.payload };\r\n        case \"REFRESHTOKEN\":\r\n            return { ...state, refreshToken: action.payload };\r\n        case \"AUTHENTICATED\":\r\n            return { ...state, authenticated: action.payload };\r\n        case \"USERNAME\":\r\n            return { ...state, username: action.payload };\r\n        case \"EXPIERSIN\":\r\n            return { ...state, expiresIn: action.payload };\r\n        case \"PROVENCE\":\r\n            return { ...state, provence: action.payload };\r\n        case \"PHYSICIANS\":\r\n            return { ...state, Physician: action.payload };\r\n        case \"WORKER\":\r\n            return { ...state, worker: action.payload };\r\n        case \"PAYMENTTYPES\":\r\n            return { ...state, paymentTypes: action.payload };\r\n        case \"ASSOCIATELEVAL\":\r\n            return { ...state, associateLeval: action.payload };\r\n        case \"RESET\":\r\n            return state = {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default appReducer;\r\n","import { createStore } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport rootReducer from './Reducer'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer)\r\n  let persistor = persistStore(store)\r\n  return { store, persistor }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport configureStore from './store/ReduxStore'\r\n// import store from './store/Store'\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\n\r\nconst { store, persistor } = configureStore();\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\n\r\nroot.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}